!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACCOUNT	src/sync-service/SyncManager_JsonParser.cpp	/^static const gchar* ACCOUNT = "account";$/;"	v	file:
ACCOUNT_CAPABILITY	src/sync-service/SyncManager_JsonParser.cpp	/^static const gchar* ACCOUNT_CAPABILITY = "capability";$/;"	v	file:
ACCOUNT_CAPABILITY_ID	src/sync-service/SyncManager_JsonParser.cpp	/^static const gchar* ACCOUNT_CAPABILITY_ID = "id";$/;"	v	file:
ACCOUNT_ENABLED	src/sync-service/SyncManager_JsonParser.cpp	/^static const gchar* ACCOUNT_ENABLED = "enabled";$/;"	v	file:
ACCOUNT_ID	src/sync-service/SyncManager_JsonParser.cpp	/^static const gchar* ACCOUNT_ID = "account_id";$/;"	v	file:
ACCOUNT_INFO	src/sync-service/SyncManager_JsonParser.cpp	/^static const gchar* ACCOUNT_INFO = "account_info";$/;"	v	file:
ACCOUNT_TYPE_ID	src/sync-service/SyncManager_JsonParser.cpp	/^static const gchar* ACCOUNT_TYPE_ID = "account_type_id";$/;"	v	file:
API	src/sync-service/SyncManager_ServiceInterface.cpp	25;"	d	file:
APP_CONTROL_OPERATION_CANCEL_SYNC	src/sync-client/sync_adapter.c	46;"	d	file:
APP_CONTROL_OPERATION_CANCEL_SYNC	src/sync-service/SyncManager_SyncService.cpp	49;"	d	file:
APP_CONTROL_OPERATION_START_SYNC	src/sync-client/sync_adapter.c	45;"	d	file:
APP_CONTROL_OPERATION_START_SYNC	src/sync-service/SyncManager_SyncService.cpp	48;"	d	file:
ASSERT	common/sync-log.h	86;"	d
AccountInfo	src/sync-service/SyncManager_RepositoryEngine.h	/^		AccountInfo(account_h account, string appId) { this->account = account; this->appId = appId; }$/;"	f	class:RepositoryEngine::AccountInfo
AccountInfo	src/sync-service/SyncManager_RepositoryEngine.h	/^	class AccountInfo$/;"	c	class:RepositoryEngine
AddPeriodicSyncJob	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::AddPeriodicSyncJob(string appId, PeriodicSyncJob* pJob, bool accountLess)$/;"	f	class:RepositoryEngine
AddPeriodicSyncJob	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::AddPeriodicSyncJob(string appId, int accountId, const char* capability, bundle* pExtras, long period)$/;"	f	class:SyncManager
AddPeriodicSyncJob	src/sync-service/SyncManager_SyncService.cpp	/^SyncService::AddPeriodicSyncJob(const char* appId, int accountId, bundle* pExtras, const char* pCapability, unsigned long pollFrequency)$/;"	f	class:SyncService
AddRequestN	src/sync-service/SyncManager_SyncWorker.cpp	/^SyncWorker::AddRequestN(ISyncWorkerResultListener* pSyncWorkerResultListener, Message msg)$/;"	f	class:SyncWorker
AddRunningAccount	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::AddRunningAccount(int account_id, int pid)$/;"	f	class:SyncManager
AddSyncAdapter	src/sync-service/SyncManager_SyncAdapterAggregator.cpp	/^SyncAdapterAggregator::AddSyncAdapter(const char* pAccountProviderId, const char* pServiceAppId, const char* pCapability)$/;"	f	class:SyncAdapterAggregator
AddSyncJob	src/sync-service/SyncManager_SyncJobQueue.cpp	/^SyncJobQueue::AddSyncJob(SyncJob job)$/;"	f	class:SyncJobQueue
AddSyncJob	src/sync-service/SyncManager_SyncJobQueue.cpp	/^SyncJobQueue::AddSyncJob(SyncJob pSyncJob, PendingJob* pPendingJob)$/;"	f	class:SyncJobQueue
AddSyncJobToCurrentSyncQueue	src/sync-service/SyncManager_CurrentSyncJobQueue.cpp	/^CurrentSyncJobQueue::AddSyncJobToCurrentSyncQueue(SyncJob syncJob)$/;"	f	class:CurrentSyncJobQueue
AddToSyncQueue	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::AddToSyncQueue(SyncJob* pJob)$/;"	f	class:SyncManager
AlertForChange	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::AlertForChange()$/;"	f	class:SyncManager
AreAccountsEqual	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::AreAccountsEqual(account_h account1, account_h account2)$/;"	f	class:SyncManager
BAT_CRITICAL_LOW	src/sync-service/SyncManager_SyncDefines.h	/^	BAT_CRITICAL_LOW,$/;"	e	enum:BatteryStatus
BAT_FULL	src/sync-service/SyncManager_SyncDefines.h	/^	BAT_FULL,$/;"	e	enum:BatteryStatus
BAT_NORMAL	src/sync-service/SyncManager_SyncDefines.h	/^	BAT_NORMAL,$/;"	e	enum:BatteryStatus
BAT_POWER_OFF	src/sync-service/SyncManager_SyncDefines.h	/^	BAT_POWER_OFF = 1,$/;"	e	enum:BatteryStatus
BAT_REAL_POWER_OFF	src/sync-service/SyncManager_SyncDefines.h	/^	BAT_REAL_POWER_OFF$/;"	e	enum:BatteryStatus
BAT_WARNING_LOW	src/sync-service/SyncManager_SyncDefines.h	/^	BAT_WARNING_LOW,$/;"	e	enum:BatteryStatus
BT_OFF	src/sync-service/SyncManager_SyncDefines.h	/^	BT_OFF,$/;"	e	enum:BluetoothStatus
BT_ON	src/sync-service/SyncManager_SyncDefines.h	/^	BT_ON,$/;"	e	enum:BluetoothStatus
BT_TRANSFER	src/sync-service/SyncManager_SyncDefines.h	/^	BT_TRANSFER$/;"	e	enum:BluetoothStatus
BT_VISIBLE	src/sync-service/SyncManager_SyncDefines.h	/^	BT_VISIBLE,$/;"	e	enum:BluetoothStatus
BackOffMode	src/sync-service/SyncManager_SyncDefines.h	/^class BackOffMode$/;"	c
BatteryStatus	src/sync-service/SyncManager_SyncDefines.h	/^enum BatteryStatus$/;"	g
BatteryStatusListener	src/sync-service/SyncManager_BatteryStatusListener.cpp	/^BatteryStatusListener::BatteryStatusListener(void)$/;"	f	class:BatteryStatusListener
BatteryStatusListener	src/sync-service/SyncManager_BatteryStatusListener.h	/^class BatteryStatusListener$/;"	c
BluetoothStatus	src/sync-service/SyncManager_SyncDefines.h	/^enum BluetoothStatus$/;"	g
CALENDAR_BOOK_CHANGED	src/sync-service/SyncManager_SyncDefines.h	/^	CALENDAR_BOOK_CHANGED = 0,$/;"	e	enum:DataChangeStatus
CALENDAR_EVENT_CHANGED	src/sync-service/SyncManager_SyncDefines.h	/^	CALENDAR_EVENT_CHANGED,$/;"	e	enum:DataChangeStatus
CALENDAR_TODO_CHANGED	src/sync-service/SyncManager_SyncDefines.h	/^	CALENDAR_TODO_CHANGED,$/;"	e	enum:DataChangeStatus
CONTACTS_DATA_CHANGED	src/sync-service/SyncManager_SyncDefines.h	/^	CONTACTS_DATA_CHANGED,$/;"	e	enum:DataChangeStatus
CalculateDefaultFlexTime	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::CalculateDefaultFlexTime(long period)$/;"	f	class:RepositoryEngine
CancelActiveSyncJob	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::CancelActiveSyncJob(string appId, account_h account, string capability)$/;"	f	class:SyncManager
CancelSync	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::CancelSync(string appId, account_h account, const char* capability)$/;"	f	class:SyncManager
CancelSync	src/sync-service/SyncManager_SyncService.cpp	/^SyncService::CancelSync(const char* appId, account_h account, const char* pCapability)$/;"	f	class:SyncService
CapabilityInfo	src/sync-service/SyncManager_CapabilityInfo.cpp	/^CapabilityInfo::CapabilityInfo(const CapabilityInfo& capabilityInfo)$/;"	f	class:CapabilityInfo
CapabilityInfo	src/sync-service/SyncManager_CapabilityInfo.cpp	/^CapabilityInfo::CapabilityInfo(string appId, account_h account, string capability, int id)$/;"	f	class:CapabilityInfo
CapabilityInfo	src/sync-service/SyncManager_CapabilityInfo.cpp	/^CapabilityInfo::CapabilityInfo(void)$/;"	f	class:CapabilityInfo
CapabilityInfo	src/sync-service/SyncManager_CapabilityInfo.h	/^class CapabilityInfo$/;"	c
CheckDb	src/sync-service/SyncManager_SettingsDbHelper.cpp	/^SettingDBHelper::CheckDb(void)$/;"	f	class:SettingDBHelper
CleanBundle	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::CleanBundle(bundle* pData)$/;"	f	class:SyncJob
CleanUp	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::CleanUp(string appId)$/;"	f	class:RepositoryEngine
ClearBackoffValue	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::ClearBackoffValue(SyncJob* pJob)$/;"	f	class:SyncManager
ClearScheduledSyncJobs	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::ClearScheduledSyncJobs(string appId, account_h account, string capability)$/;"	f	class:SyncManager
CloseCurrentSyncContext	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::CloseCurrentSyncContext(CurrentSyncContext *activeSyncContext)$/;"	f	class:SyncManager
Compare	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::Compare(void* pObj)$/;"	f	class:SyncJob
Construct	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::Construct(void)$/;"	f	class:SyncManager
CreateCopyOfCapabilityAndSyncStatusPairN	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::CreateCopyOfCapabilityAndSyncStatusPairN(CapabilityInfo* pCapabilityInfo)$/;"	f	class:RepositoryEngine
CurrentSyncContext	src/sync-service/SyncManager_CurrentSyncContext.cpp	/^CurrentSyncContext::CurrentSyncContext(const CurrentSyncContext& currContext)$/;"	f	class:CurrentSyncContext
CurrentSyncContext	src/sync-service/SyncManager_CurrentSyncContext.cpp	/^CurrentSyncContext::CurrentSyncContext(const SyncJob pSyncJob)$/;"	f	class:CurrentSyncContext
CurrentSyncContext	src/sync-service/SyncManager_CurrentSyncContext.h	/^class CurrentSyncContext$/;"	c
CurrentSyncJobQueue	src/sync-service/SyncManager_CurrentSyncJobQueue.cpp	/^CurrentSyncJobQueue::CurrentSyncJobQueue(void)$/;"	f	class:CurrentSyncJobQueue
CurrentSyncJobQueue	src/sync-service/SyncManager_CurrentSyncJobQueue.h	/^class CurrentSyncJobQueue$/;"	c
DEFAULT_FLEX_PERCENT	src/sync-service/SyncManager_RepositoryEngine.cpp	/^const double RepositoryEngine::DEFAULT_FLEX_PERCENT = 0.04;		\/\/ 4 percent$/;"	m	class:RepositoryEngine	file:
DEFAULT_FLEX_PERCENT	src/sync-service/SyncManager_RepositoryEngine.h	/^	static const double DEFAULT_FLEX_PERCENT;$/;"	m	class:RepositoryEngine
DEFAULT_MIN_FLEX_ALLOWED_SEC	src/sync-service/SyncManager_RepositoryEngine.cpp	/^const long RepositoryEngine::DEFAULT_MIN_FLEX_ALLOWED_SEC = 5;	\/\/ 5 seconds$/;"	m	class:RepositoryEngine	file:
DEFAULT_MIN_FLEX_ALLOWED_SEC	src/sync-service/SyncManager_RepositoryEngine.h	/^	static const long DEFAULT_MIN_FLEX_ALLOWED_SEC;$/;"	m	class:RepositoryEngine
DEFAULT_PERIOD_SEC	src/sync-service/SyncManager_RepositoryEngine.cpp	/^const long RepositoryEngine::DEFAULT_PERIOD_SEC = 24*60*60;	\/\/ 1 day$/;"	m	class:RepositoryEngine	file:
DEFAULT_PERIOD_SEC	src/sync-service/SyncManager_RepositoryEngine.h	/^	static const long DEFAULT_PERIOD_SEC;$/;"	m	class:RepositoryEngine
DELAY_RETRY_SYNC_IN_PROGRESS_IN_SECONDS	src/sync-service/SyncManager_SyncManager.cpp	/^int DELAY_RETRY_SYNC_IN_PROGRESS_IN_SECONDS = 10;$/;"	v
DNET_NORMAL_CONNECTED	src/sync-service/SyncManager_SyncDefines.h	/^	DNET_NORMAL_CONNECTED,$/;"	e	enum:DNetStatus
DNET_OFF	src/sync-service/SyncManager_SyncDefines.h	/^	DNET_OFF = 0x00,$/;"	e	enum:DNetStatus
DNET_SECURE_CONNECTED	src/sync-service/SyncManager_SyncDefines.h	/^	DNET_SECURE_CONNECTED,$/;"	e	enum:DNetStatus
DNET_STATE_MAX	src/sync-service/SyncManager_SyncDefines.h	/^	DNET_STATE_MAX$/;"	e	enum:DNetStatus
DNET_TRANSFER	src/sync-service/SyncManager_SyncDefines.h	/^	DNET_TRANSFER,$/;"	e	enum:DNetStatus
DNetStatus	src/sync-service/SyncManager_SyncDefines.h	/^enum DNetStatus$/;"	g
DataChangeListener	src/sync-service/SyncManager_DataChangeListener.cpp	/^DataChangeListener::DataChangeListener(void)$/;"	f	class:DataChangeListener
DataChangeListener	src/sync-service/SyncManager_DataChangeListener.h	/^class DataChangeListener$/;"	c
DataChangeStatus	src/sync-service/SyncManager_SyncDefines.h	/^enum DataChangeStatus$/;"	g
DayStats	src/sync-service/SyncManager_DayStats.cpp	/^DayStats::DayStats(int dayData)$/;"	f	class:DayStats
DayStats	src/sync-service/SyncManager_DayStats.cpp	/^DayStats::DayStats(void)$/;"	f	class:DayStats
DayStats	src/sync-service/SyncManager_DayStats.h	/^class DayStats$/;"	c
DbusSignalHandler	src/sync-service/main.cpp	/^DbusSignalHandler(DBusConnection* pConnection, DBusMessage* pMsg, void* pUserData)$/;"	f
DeRegisterBatteryStatusListener	src/sync-service/SyncManager_BatteryStatusListener.cpp	/^BatteryStatusListener::DeRegisterBatteryStatusListener(void)$/;"	f	class:BatteryStatusListener
DeRegisterDataChangeListener	src/sync-service/SyncManager_DataChangeListener.cpp	/^int DataChangeListener::DeRegisterDataChangeListener(void)$/;"	f	class:DataChangeListener
DeRegisterForBatteryStatus	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::DeRegisterForBatteryStatus(void)$/;"	f	class:SyncManager
DeRegisterForDataChange	src/sync-service/SyncManager_SyncManager.cpp	/^int SyncManager::DeRegisterForDataChange(void)$/;"	f	class:SyncManager
DeRegisterForNetworkChange	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::DeRegisterForNetworkChange(void)$/;"	f	class:SyncManager
DeRegisterForStorageChange	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::DeRegisterForStorageChange(void)$/;"	f	class:SyncManager
DeRegisterForUPSModeChange	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::DeRegisterForUPSModeChange(void)$/;"	f	class:SyncManager
DeRegisterNetworkChangeListener	src/sync-service/SyncManager_NetworkChangeListener.cpp	/^NetworkChangeListener::DeRegisterNetworkChangeListener(void)$/;"	f	class:NetworkChangeListener
DeRegisterStorageChangeListener	src/sync-service/SyncManager_StorageChangeListener.cpp	/^StorageChangeListener::DeRegisterStorageChangeListener(void)$/;"	f	class:StorageChangeListener
DeleteFromPending	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::DeleteFromPending(PendingJob* pPendingJob)$/;"	f	class:RepositoryEngine
DeleteSyncSettings	src/sync-service/SyncManager_SettingsDbHelper.cpp	/^SettingDBHelper::DeleteSyncSettings(const int accountTypeId)$/;"	f	class:SettingDBHelper
Destroy	src/sync-service/SyncManager_Singleton.h	/^	static void Destroy(void)$/;"	f	class:Singleton
DispatchSyncJob	src/sync-service/SyncManager_SyncJobDispatcher.cpp	/^SyncJobDispatcher::DispatchSyncJob(SyncJob syncJob)$/;"	f	class:SyncJobDispatcher
DoesAccAuthExist	src/sync-service/SyncManager_CurrentSyncJobQueue.cpp	/^CurrentSyncJobQueue::DoesAccAuthExist(account_h account, string auth)$/;"	f	class:CurrentSyncJobQueue
ENABLE_DEBUG	common/sync-log.h	31;"	d
E_FAILURE	common/sync-log.h	34;"	d
E_SUCCESS	common/sync-log.h	33;"	d
EnsurePeriodicSyncTimeSize	src/sync-service/SyncManager_SyncStatusInfo.cpp	/^SyncStatusInfo::EnsurePeriodicSyncTimeSize(unsigned int index)$/;"	f	class:SyncStatusInfo
ExecDb	src/sync-service/SyncManager_SettingsDbHelper.cpp	/^SettingDBHelper::ExecDb(const std::string& query)$/;"	f	class:SettingDBHelper
FLEX	src/sync-service/SyncManager_JsonParser.cpp	/^static const gchar* FLEX = "flex";$/;"	v	file:
FOR_ACCOUNT_LESS_SYNC	src/sync-service/SyncManager_RepositoryEngine.cpp	115;"	d	file:
Finalize	src/sync-service/SyncManager_SyncWorker.cpp	/^SyncWorker::Finalize(void)$/;"	f	class:SyncWorker
FireEvent	src/sync-service/SyncManager_SyncWorker.cpp	/^SyncWorker::FireEvent(ISyncWorkerResultListener* pSyncWorkerResultListener, Message msg)$/;"	f	class:SyncWorker
GetAccountPid	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::GetAccountPid(int account_id)$/;"	f	class:SyncManager
GetAccountTypeId	src/sync-service/SyncManager_ProviderSettings.cpp	/^ProviderSetting::GetAccountTypeId(void) const$/;"	f	class:ProviderSetting
GetAllowParallelSync	src/sync-service/SyncManager_ProviderSettings.cpp	/^ProviderSetting::GetAllowParallelSync(void) const$/;"	f	class:ProviderSetting
GetAlwaysSyncable	src/sync-service/SyncManager_ProviderSettings.cpp	/^ProviderSetting::GetAlwaysSyncable(void) const$/;"	f	class:ProviderSetting
GetAuthorityId	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::GetAuthorityId(void) const$/;"	f	class:HistoryItem
GetBackoffN	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::GetBackoffN(account_h account, const string capability)$/;"	f	class:RepositoryEngine
GetBundleVal	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::GetBundleVal(const char* pVal)$/;"	f	class:SyncJob
GetBundleVal	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::GetBundleVal(const char* pVal)$/;"	f	class:SyncManager
GetCapabilityLocked	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::GetCapabilityLocked(account_h account, const string capability, const char* pTag)$/;"	f	class:RepositoryEngine
GetCopyOfAllCapabilityAndSyncStatusN	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::GetCopyOfAllCapabilityAndSyncStatusN(void)$/;"	f	class:RepositoryEngine
GetCurrJobfromKey	src/sync-service/SyncManager_CurrentSyncJobQueue.cpp	/^CurrentSyncJobQueue::GetCurrJobfromKey(string key)$/;"	f	class:CurrentSyncJobQueue
GetDay	src/sync-service/SyncManager_DayStats.cpp	/^int DayStats::GetDay(void) const$/;"	f	class:DayStats
GetDelayUntilTime	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::GetDelayUntilTime(account_h account, const string capability)$/;"	f	class:RepositoryEngine
GetDownstreamActivity	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::GetDownstreamActivity(void) const$/;"	f	class:HistoryItem
GetElapsedTime	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::GetElapsedTime(void) const$/;"	f	class:HistoryItem
GetElapsedTime	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::GetElapsedTime(void)$/;"	f	class:SyncManager
GetEvent	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::GetEvent(void) const$/;"	f	class:HistoryItem
GetEventTime	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::GetEventTime(void) const$/;"	f	class:HistoryItem
GetExtras	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::GetExtras(void) const$/;"	f	class:HistoryItem
GetExtrasInfo	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::GetExtrasInfo(bundle* pData)$/;"	f	class:SyncJob
GetFailureCount	src/sync-service/SyncManager_DayStats.cpp	/^int DayStats::GetFailureCount(void) const$/;"	f	class:DayStats
GetFailureTime	src/sync-service/SyncManager_DayStats.cpp	/^long DayStats::GetFailureTime(void) const$/;"	f	class:DayStats
GetHistoryId	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::GetHistoryId(void) const$/;"	f	class:HistoryItem
GetInstance	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::GetInstance(void)$/;"	f	class:RepositoryEngine
GetInstance	src/sync-service/SyncManager_Singleton.h	/^	static TYPE* GetInstance(void)$/;"	f	class:Singleton
GetInstance	src/sync-service/SyncManager_SyncManager.cpp	/^Singleton< SyncManager >::GetInstance()$/;"	f	class:Singleton
GetMsg	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::GetMsg(void) const$/;"	f	class:HistoryItem
GetOperations	src/sync-service/SyncManager_CurrentSyncJobQueue.cpp	/^CurrentSyncJobQueue::GetOperations(void)$/;"	f	class:CurrentSyncJobQueue
GetOrCreateCapabilityLocked	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::GetOrCreateCapabilityLocked(string appId, account_h account, const string capability, int id, bool toWriteToXml)$/;"	f	class:RepositoryEngine
GetOrCreateSyncStatusLocked	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::GetOrCreateSyncStatusLocked(int capabilityId)$/;"	f	class:RepositoryEngine
GetPeriodicSyncTime	src/sync-service/SyncManager_SyncStatusInfo.cpp	/^SyncStatusInfo::GetPeriodicSyncTime(unsigned int index)$/;"	f	class:SyncStatusInfo
GetPkgIdByAppId	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::GetPkgIdByAppId(const char* pAppId)$/;"	f	class:SyncManager
GetPkgIdByCommandline	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::GetPkgIdByCommandline(const char* pCommandLine)$/;"	f	class:SyncManager
GetRandomOffsetInsec	src/sync-service/SyncManager_RepositoryEngine.h	/^	long GetRandomOffsetInsec(void) { return __randomOffsetInSec; }$/;"	f	class:RepositoryEngine
GetReason	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::GetReason(void) const$/;"	f	class:HistoryItem
GetSource	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::GetSource(void) const$/;"	f	class:HistoryItem
GetStartTime	src/sync-service/SyncManager_CurrentSyncContext.cpp	/^CurrentSyncContext::GetStartTime() const$/;"	f	class:CurrentSyncContext
GetStatusInfoString	src/sync-service/SyncManager_SyncStatusInfo.cpp	/^SyncStatusInfo::GetStatusInfoString(void)$/;"	f	class:SyncStatusInfo
GetSuccessCount	src/sync-service/SyncManager_DayStats.cpp	/^int DayStats::GetSuccessCount(void) const$/;"	f	class:DayStats
GetSuccessTime	src/sync-service/SyncManager_DayStats.cpp	/^long DayStats::GetSuccessTime(void) const$/;"	f	class:DayStats
GetSupportsUploading	src/sync-service/SyncManager_ProviderSettings.cpp	/^ProviderSetting::GetSupportsUploading(void) const$/;"	f	class:ProviderSetting
GetSyncAdapter	src/sync-service/SyncManager_SyncAdapterAggregator.cpp	/^SyncAdapterAggregator::GetSyncAdapter(account_h account, string capability)$/;"	f	class:SyncAdapterAggregator
GetSyncAdapter	src/sync-service/SyncManager_SyncAdapterAggregator.cpp	/^SyncAdapterAggregator::GetSyncAdapter(const char* pAppId)$/;"	f	class:SyncAdapterAggregator
GetSyncAdapterAggregator	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::GetSyncAdapterAggregator()$/;"	f	class:SyncManager
GetSyncAutomatically	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::GetSyncAutomatically(account_h account, string capability)$/;"	f	class:RepositoryEngine
GetSyncJob	src/sync-service/SyncManager_CurrentSyncContext.cpp	/^CurrentSyncContext::GetSyncJob() const$/;"	f	class:CurrentSyncContext
GetSyncJobQueue	src/sync-service/SyncManager_SyncJobQueue.cpp	/^SyncJobQueue::GetSyncJobQueue(void) const$/;"	f	class:SyncJobQueue
GetSyncJobQueue	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::GetSyncJobQueue(void) const$/;"	f	class:SyncManager
GetSyncRepositoryEngine	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::GetSyncRepositoryEngine(void)$/;"	f	class:SyncManager
GetSyncSetting	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::GetSyncSetting()$/;"	f	class:SyncManager
GetSyncSettings	src/sync-service/SyncManager_SettingsDbHelper.cpp	/^SettingDBHelper::GetSyncSettings(const int accountTypeId, ProviderSetting& providerSettings)$/;"	f	class:SettingDBHelper
GetSyncable	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::GetSyncable(account_h account, string capability)$/;"	f	class:RepositoryEngine
GetSyncable	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::GetSyncable(account_h account, string capability)$/;"	f	class:SyncManager
GetTimerId	src/sync-service/SyncManager_CurrentSyncContext.cpp	/^CurrentSyncContext::GetTimerId() const$/;"	f	class:CurrentSyncContext
GetUpstreamActivity	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::GetUpstreamActivity(void) const$/;"	f	class:HistoryItem
GetUserVisible	src/sync-service/SyncManager_ProviderSettings.cpp	/^ProviderSetting::GetUserVisible(void) const$/;"	f	class:ProviderSetting
HandleJobCompletedOrCancelledLocked	src/sync-service/SyncManager_SyncJobDispatcher.cpp	/^SyncJobDispatcher::HandleJobCompletedOrCancelledLocked(SyncStatus res, SyncJob *pJob)$/;"	f	class:SyncJobDispatcher
HandlePackageUninstalled	src/sync-service/SyncManager_SyncAdapterAggregator.cpp	/^SyncAdapterAggregator::HandlePackageUninstalled(const char* pAppId)$/;"	f	class:SyncAdapterAggregator
HandleShutdown	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::HandleShutdown(void)$/;"	f	class:SyncManager
HandleShutdown	src/sync-service/SyncManager_SyncService.cpp	/^SyncService::HandleShutdown(void)$/;"	f	class:SyncService
HasProviderSettings	src/sync-service/SyncManager_SettingsDbHelper.cpp	/^SettingDBHelper::HasProviderSettings(const int accountTypeId)$/;"	f	class:SettingDBHelper
HasSyncAdapter	src/sync-service/SyncManager_SyncAdapterAggregator.cpp	/^SyncAdapterAggregator::HasSyncAdapter(const char* pAccountProviderId, const char* pServiceAppId, const char* pCapability)$/;"	f	class:SyncAdapterAggregator
HistoryItem	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::HistoryItem(void)$/;"	f	class:HistoryItem
HistoryItem	src/sync-service/SyncManager_HistoryItem.h	/^class HistoryItem$/;"	c
ISyncWorkerResultListener	src/sync-service/SyncManager_SyncWorkerResultListener.h	/^class ISyncWorkerResultListener$/;"	c
IgnoreBackoff	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::IgnoreBackoff(void)$/;"	f	class:SyncJob
IncreaseBackoffValue	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::IncreaseBackoffValue(SyncJob* pJob)$/;"	f	class:SyncManager
Initialize	src/sync-service/SyncManager_SyncWorker.cpp	/^SyncWorker::Initialize(void)$/;"	f	class:SyncWorker
InitializeDbus	src/sync-service/SyncManager_SyncService.cpp	/^SyncService::InitializeDbus(void)$/;"	f	class:SyncService
InsertIntoPending	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::InsertIntoPending(PendingJob* pPendingJob)$/;"	f	class:RepositoryEngine
InsertSyncSettings	src/sync-service/SyncManager_SettingsDbHelper.cpp	/^SettingDBHelper::InsertSyncSettings(const ProviderSetting& providerSettings)$/;"	f	class:SettingDBHelper
IsActiveAccount	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::IsActiveAccount(vector<account_h> accounts, account_h account)$/;"	f	class:SyncManager
IsDataConnectionPresent	src/sync-service/SyncManager_NetworkChangeListener.cpp	/^NetworkChangeListener::IsDataConnectionPresent()$/;"	f	class:NetworkChangeListener
IsExpedited	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::IsExpedited(void)$/;"	f	class:SyncJob
IsExtraEqual	src/sync-service/SyncManager_PeriodicSyncJob.cpp	/^PeriodicSyncJob::IsExtraEqual(PeriodicSyncJob* pJob)$/;"	f	class:PeriodicSyncJob
IsInitialized	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::IsInitialized(void) const$/;"	f	class:HistoryItem
IsInitialized	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::IsInitialized(void)$/;"	f	class:SyncJob
IsJobActive	src/sync-service/SyncManager_CurrentSyncJobQueue.cpp	/^CurrentSyncJobQueue::IsJobActive(CurrentSyncContext *pCurrSync)$/;"	f	class:CurrentSyncJobQueue
IsJobActive	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::IsJobActive(CurrentSyncContext *pCurrSync)$/;"	f	class:SyncManager
IsMeteredDisallowed	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::IsMeteredDisallowed(void)$/;"	f	class:SyncJob
IsNoRetry	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::IsNoRetry(void)$/;"	f	class:SyncJob
IsNoTooManyRetry	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::IsNoTooManyRetry(void)$/;"	f	class:SyncJob
IsWifiConnected	src/sync-service/SyncManager_NetworkChangeListener.cpp	/^NetworkChangeListener::IsWifiConnected()$/;"	f	class:NetworkChangeListener
JsonParser	src/sync-service/SyncManager_JsonParser.cpp	/^JsonParser::JsonParser()$/;"	f	class:JsonParser
JsonParser	src/sync-service/SyncManager_JsonParser.h	/^class JsonParser$/;"	c
KNOX_CONTAINER_ZONE_ENTER	src/sync-service/SyncManager_SyncDefines.h	33;"	d
KNOX_CONTAINER_ZONE_ENTER	src/sync-service/SyncManager_SyncDefines.h	41;"	d
KNOX_CONTAINER_ZONE_EXIT	src/sync-service/SyncManager_SyncDefines.h	39;"	d
KNOX_CONTAINER_ZONE_EXIT	src/sync-service/SyncManager_SyncDefines.h	42;"	d
LOG_ERROR	common/sync-log.h	40;"	d
LOG_ERRORD	common/sync-log.h	44;"	d
LOG_LOGC	common/sync-log.h	43;"	d
LOG_LOGD	common/sync-log.h	42;"	d
LOG_LOGD	common/sync-log.h	96;"	d
LOG_LOGE	common/sync-log.h	97;"	d
LOG_LOGE_BOOL	common/sync-log.h	74;"	d
LOG_LOGE_NULL	common/sync-log.h	60;"	d
LOG_LOGE_RESULT	common/sync-log.h	46;"	d
LOG_LOGE_VOID	common/sync-log.h	67;"	d
LOG_TAG	common/sync-log.h	22;"	d
LOG_TAG	common/sync-log.h	24;"	d
LOG_TAG_CLIENT	common/sync-log.h	25;"	d
LOG_VERBOSE	common/sync-log.h	39;"	d
LOW_MEMORY_HARD_WARNING	src/sync-service/SyncManager_SyncDefines.h	/^	LOW_MEMORY_HARD_WARNING = 0x04$/;"	e	enum:MemoryStatus
LOW_MEMORY_NORMAL	src/sync-service/SyncManager_SyncDefines.h	/^	LOW_MEMORY_NORMAL = 0x01,$/;"	e	enum:MemoryStatus
LOW_MEMORY_SOFT_WARNING	src/sync-service/SyncManager_SyncDefines.h	/^	LOW_MEMORY_SOFT_WARNING = 0x02,$/;"	e	enum:MemoryStatus
MAX	src/sync-service/SyncManager_RepositoryEngine.cpp	51;"	d	file:
MAX	src/sync-service/SyncManager_SyncJob.cpp	35;"	d	file:
MAX	src/sync-service/SyncManager_SyncJobDispatcher.cpp	37;"	d	file:
MAX_SIMULTANEOUS_INITIALIZATION_SYNCS	src/sync-service/SyncManager_SyncJobDispatcher.cpp	/^long MAX_SIMULTANEOUS_INITIALIZATION_SYNCS = 2;$/;"	v
MAX_SIMULTANEOUS_REGULAR_SYNCS	src/sync-service/SyncManager_SyncJobDispatcher.cpp	/^long MAX_SIMULTANEOUS_REGULAR_SYNCS = 10;$/;"	v
MAX_TIMEOUT_VAL	src/sync-service/SyncManager_SyncJobDispatcher.cpp	/^long MAX_TIMEOUT_VAL = 2*60*60*1000; \/\/ 2 hours$/;"	v
MAX_TIME_PER_SYNC	src/sync-service/SyncManager_SyncJobDispatcher.cpp	/^long MAX_TIME_PER_SYNC = 5*60*1000; \/\/5 minutes$/;"	v
MIN	src/sync-service/SyncManager_SyncJobDispatcher.cpp	40;"	d	file:
MIN	src/sync-service/SyncManager_SyncJobQueue.cpp	37;"	d	file:
MIN_TIMEOUT_VAL	src/sync-service/SyncManager_SyncJobDispatcher.cpp	/^long MIN_TIMEOUT_VAL = 30*1000; \/\/ 30 seconds$/;"	v
MakeDb	src/sync-service/SyncManager_SettingsDbHelper.cpp	/^SettingDBHelper::MakeDb(void)$/;"	f	class:SettingDBHelper
MemoryStatus	src/sync-service/SyncManager_SyncDefines.h	/^enum MemoryStatus$/;"	g
Message	src/sync-service/SyncManager_SyncDefines.h	/^struct Message$/;"	s
NOT_IN_BACKOFF_MODE	src/sync-service/SyncManager_RepositoryEngine.cpp	/^const long RepositoryEngine::NOT_IN_BACKOFF_MODE = -1;$/;"	m	class:RepositoryEngine	file:
NOT_IN_BACKOFF_MODE	src/sync-service/SyncManager_RepositoryEngine.h	/^	static const long NOT_IN_BACKOFF_MODE;$/;"	m	class:RepositoryEngine
NOT_IN_BACKOFF_MODE	src/sync-service/SyncManager_SyncDefines.cpp	/^long BackOffMode::NOT_IN_BACKOFF_MODE = -1;$/;"	m	class:BackOffMode	file:
NOT_IN_BACKOFF_MODE	src/sync-service/SyncManager_SyncDefines.h	/^	static long NOT_IN_BACKOFF_MODE;$/;"	m	class:BackOffMode
NetworkChangeListener	src/sync-service/SyncManager_NetworkChangeListener.cpp	/^NetworkChangeListener::NetworkChangeListener(void)$/;"	f	class:NetworkChangeListener
NetworkChangeListener	src/sync-service/SyncManager_NetworkChangeListener.h	/^class NetworkChangeListener$/;"	c
OnAccountUpdated	src/sync-service/SyncManager_SyncManager.cpp	/^bool OnAccountUpdated(const char* pEventType, int acountId, void* pUserData)$/;"	f
OnAlarmExpired	src/sync-service/SyncManager_SyncJobDispatcher.cpp	/^SyncJobDispatcher::OnAlarmExpired(alarm_id_t alarm_id, void *user_param)$/;"	f	class:SyncJobDispatcher
OnAppLaunched	src/sync-service/SyncManager_SyncManager.cpp	/^static int OnAppLaunched(int pid, void* pData)$/;"	f	file:
OnBackoffChanged	src/sync-service/SyncManager_SyncJobQueue.cpp	/^SyncJobQueue::OnBackoffChanged(account_h account, const string capability, long backoff)$/;"	f	class:SyncJobQueue
OnBatteryStatusChanged	src/sync-service/SyncManager_BatteryStatusListener.cpp	/^void OnBatteryStatusChanged(keynode_t* pKey, void* pData)$/;"	f
OnBatteryStatusChanged	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::OnBatteryStatusChanged(int value)$/;"	f	class:SyncManager
OnBluetoothStatusChanged	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::OnBluetoothStatusChanged(bool connected)$/;"	f	class:SyncManager
OnBusAcquired	src/sync-service/SyncManager_SyncService.cpp	/^OnBusAcquired (GDBusConnection* pConnection, const gchar* pName, gpointer userData)$/;"	f	file:
OnCalendarBookChanged	src/sync-service/SyncManager_DataChangeListener.cpp	/^void OnCalendarBookChanged(const char* view_uri, void* user_data)$/;"	f
OnCalendarDataChanged	src/sync-service/SyncManager_SyncManager.cpp	/^void SyncManager::OnCalendarDataChanged(int value)$/;"	f	class:SyncManager
OnCalendarEventChanged	src/sync-service/SyncManager_DataChangeListener.cpp	/^void OnCalendarEventChanged(const char* view_uri, void* user_data)$/;"	f
OnCalendarTodoChanged	src/sync-service/SyncManager_DataChangeListener.cpp	/^void OnCalendarTodoChanged(const char* view_uri, void* user_data)$/;"	f
OnConnectionChanged	src/sync-service/SyncManager_NetworkChangeListener.cpp	/^void OnConnectionChanged(connection_type_e type, void *user_data)$/;"	f
OnContactsDataChanged	src/sync-service/SyncManager_DataChangeListener.cpp	/^void OnContactsDataChanged(const char* view_uri, void* user_data)$/;"	f
OnContactsDataChanged	src/sync-service/SyncManager_SyncManager.cpp	/^void SyncManager::OnContactsDataChanged(int value)$/;"	f	class:SyncManager
OnDNetStatusChanged	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::OnDNetStatusChanged(bool connected)$/;"	f	class:SyncManager
OnDelayUntilTimeChanged	src/sync-service/SyncManager_SyncJobQueue.cpp	/^SyncJobQueue::OnDelayUntilTimeChanged(account_h account, const string capability, long delayUntil)$/;"	f	class:SyncJobQueue
OnEventReceived	src/sync-service/SyncManager_SyncJobDispatcher.cpp	/^SyncJobDispatcher::OnEventReceived(Message msg)$/;"	f	class:SyncJobDispatcher
OnEventReceived	src/sync-service/SyncManager_SyncWorker.cpp	/^SyncWorker::OnEventReceived(GIOChannel* pChannel, GIOCondition condition, gpointer data)$/;"	f	class:SyncWorker
OnIdle	src/sync-service/main.cpp	/^OnIdle(void* pUserData)$/;"	f	file:
OnMemoryStatusChanged	src/sync-service/SyncManager_StorageChangeListener.cpp	/^void OnMemoryStatusChanged(keynode_t* pKey, void* pData)$/;"	f
OnNameAcquired	src/sync-service/SyncManager_SyncService.cpp	/^OnNameAcquired (GDBusConnection* pConnection, const gchar* pName, gpointer userData)$/;"	f	file:
OnNameLost	src/sync-service/SyncManager_SyncService.cpp	/^OnNameLost (GDBusConnection* pConnection, const gchar* pName, gpointer userData)$/;"	f	file:
OnPackageUninstalled	src/sync-service/SyncManager_SyncManager.cpp	/^static int OnPackageUninstalled(unsigned int userId, int reqId, const char* pPkgType, const char* pPkgId, const char* pKey,$/;"	f	file:
OnResultReceived	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::OnResultReceived(SyncStatus res, string appId, account_h account, const char* capability)$/;"	f	class:SyncManager
OnStorageStatusChanged	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::OnStorageStatusChanged(int value)$/;"	f	class:SyncManager
OnTerminate	src/sync-service/main.cpp	/^OnTerminate(void *data, int ev_type, void *ev)$/;"	f
OnTimerExpired	src/sync-service/SyncManager_CurrentSyncJobQueue.cpp	/^CurrentSyncJobQueue::OnTimerExpired(void* data)$/;"	f	class:CurrentSyncJobQueue
OnUPSModeChanged	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::OnUPSModeChanged(bool enable)$/;"	f	class:SyncManager
OnUPSModeChangedCb	src/sync-service/SyncManager_SyncManager.cpp	/^void OnUPSModeChangedCb(keynode_t* pKey, void* pData)$/;"	f
OnWifiStatusChanged	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::OnWifiStatusChanged(bool connected)$/;"	f	class:SyncManager
OpenDb	src/sync-service/SyncManager_SettingsDbHelper.cpp	/^SettingDBHelper::OpenDb(void)$/;"	f	class:SettingDBHelper
PATH_ACCOUNT	src/sync-service/SyncManager_RepositoryEngine.cpp	45;"	d	file:
PATH_STATUS	src/sync-service/SyncManager_RepositoryEngine.cpp	48;"	d	file:
PATH_SYNCADAPTERS	src/sync-service/SyncManager_RepositoryEngine.cpp	47;"	d	file:
PATH_SYNCJOBS	src/sync-service/SyncManager_RepositoryEngine.cpp	46;"	d	file:
PENDING_FINISH_TO_WRITE	src/sync-service/SyncManager_RepositoryEngine.h	/^	int PENDING_FINISH_TO_WRITE;$/;"	m	class:RepositoryEngine
PERIOD	src/sync-service/SyncManager_JsonParser.cpp	/^static const gchar* PERIOD = "period";$/;"	v	file:
PERIODIC_SYNC	src/sync-service/SyncManager_JsonParser.cpp	/^static const gchar* PERIODIC_SYNC = "periodic_sync";$/;"	v	file:
POWEROFF_MSG	src/sync-service/main.cpp	34;"	d	file:
ParseCapabilities	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::ParseCapabilities(xmlNodePtr cur)$/;"	f	class:RepositoryEngine
ParseExtras	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::ParseExtras(xmlNodePtr cur, bundle* pExtra)$/;"	f	class:RepositoryEngine
ParsePeriodicSyncs	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::ParsePeriodicSyncs(xmlNodePtr cur, CapabilityInfo *pCapabilityInfo)$/;"	f	class:RepositoryEngine
ParseSyncJobsN	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::ParseSyncJobsN(xmlNodePtr cur)$/;"	f	class:RepositoryEngine
PendingJob	src/sync-service/SyncManager_PendingJob.cpp	/^PendingJob::PendingJob(const PendingJob& otherJob)$/;"	f	class:PendingJob
PendingJob	src/sync-service/SyncManager_PendingJob.cpp	/^PendingJob::PendingJob(string appId, account_h account, int reason, int source, string capability,$/;"	f	class:PendingJob
PendingJob	src/sync-service/SyncManager_PendingJob.cpp	/^PendingJob::PendingJob(void)$/;"	f	class:PendingJob
PendingJob	src/sync-service/SyncManager_PendingJob.h	/^class PendingJob$/;"	c
PeriodicSyncJob	src/sync-service/SyncManager_PeriodicSyncJob.cpp	/^PeriodicSyncJob::PeriodicSyncJob(account_h account, string capability, bundle* pExtras, long period, long flexTime)$/;"	f	class:PeriodicSyncJob
PeriodicSyncJob	src/sync-service/SyncManager_PeriodicSyncJob.cpp	/^PeriodicSyncJob::PeriodicSyncJob(const PeriodicSyncJob& other)$/;"	f	class:PeriodicSyncJob
PeriodicSyncJob	src/sync-service/SyncManager_PeriodicSyncJob.cpp	/^PeriodicSyncJob::PeriodicSyncJob(void)$/;"	f	class:PeriodicSyncJob
PeriodicSyncJob	src/sync-service/SyncManager_PeriodicSyncJob.h	/^class PeriodicSyncJob$/;"	c
ProviderSetting	src/sync-service/SyncManager_ProviderSettings.cpp	/^ProviderSetting::ProviderSetting(void)$/;"	f	class:ProviderSetting
ProviderSetting	src/sync-service/SyncManager_ProviderSettings.h	/^class ProviderSetting$/;"	c
REASON_ACCOUNT_UPDATED	src/sync-service/SyncManager_SyncDefines.h	/^	REASON_ACCOUNT_UPDATED = -5,$/;"	e	enum:SyncReason
REASON_AUTO_SYNC	src/sync-service/SyncManager_SyncDefines.h	/^	REASON_AUTO_SYNC = -6,$/;"	e	enum:SyncReason
REASON_DATA_SETTINGS_CHANGED	src/sync-service/SyncManager_SyncDefines.h	/^	REASON_DATA_SETTINGS_CHANGED = -2,$/;"	e	enum:SyncReason
REASON_DEVICE_DATA_CHANGED	src/sync-service/SyncManager_SyncDefines.h	/^	REASON_DEVICE_DATA_CHANGED = -7$/;"	e	enum:SyncReason
REASON_PERIODIC	src/sync-service/SyncManager_SyncDefines.h	/^	REASON_PERIODIC = -3,$/;"	e	enum:SyncReason
REASON_SERVICE_CHANGED	src/sync-service/SyncManager_SyncDefines.h	/^	REASON_SERVICE_CHANGED = -4,$/;"	e	enum:SyncReason
REASON_USER_INITIATED	src/sync-service/SyncManager_SyncDefines.h	/^	REASON_USER_INITIATED = -1,$/;"	e	enum:SyncReason
ReadAccountData	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::ReadAccountData(void)$/;"	f	class:RepositoryEngine
ReadStatusData	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::ReadStatusData(void)$/;"	f	class:RepositoryEngine
ReadSyncAdapters	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::ReadSyncAdapters(void)$/;"	f	class:RepositoryEngine
ReadSyncJobsData	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::ReadSyncJobsData(void)$/;"	f	class:RepositoryEngine
RegisterBatteryStatusListener	src/sync-service/SyncManager_BatteryStatusListener.cpp	/^BatteryStatusListener::RegisterBatteryStatusListener(void)$/;"	f	class:BatteryStatusListener
RegisterDataChangeListener	src/sync-service/SyncManager_DataChangeListener.cpp	/^int DataChangeListener::RegisterDataChangeListener(void)$/;"	f	class:DataChangeListener
RegisterForBatteryStatus	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::RegisterForBatteryStatus(void)$/;"	f	class:SyncManager
RegisterForDataChange	src/sync-service/SyncManager_SyncManager.cpp	/^void SyncManager::RegisterForDataChange(void)$/;"	f	class:SyncManager
RegisterForNetworkChange	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::RegisterForNetworkChange(void)$/;"	f	class:SyncManager
RegisterForStorageChange	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::RegisterForStorageChange(void)$/;"	f	class:SyncManager
RegisterForUPSModeChange	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::RegisterForUPSModeChange(void)$/;"	f	class:SyncManager
RegisterNetworkChangeListener	src/sync-service/SyncManager_NetworkChangeListener.cpp	/^NetworkChangeListener::RegisterNetworkChangeListener(void)$/;"	f	class:NetworkChangeListener
RegisterStorageChangeListener	src/sync-service/SyncManager_StorageChangeListener.cpp	/^StorageChangeListener::RegisterStorageChangeListener(void)$/;"	f	class:StorageChangeListener
RemoveAllBackoffValuesLocked	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::RemoveAllBackoffValuesLocked(SyncJobQueue* pQueue)$/;"	f	class:RepositoryEngine
RemoveFalseExtra	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::RemoveFalseExtra(bundle* pData, const char* pExtra)$/;"	f	class:SyncJob
RemovePeriodicSync	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::RemovePeriodicSync(string appId, account_h account, const char* capability, bundle* pExtras)$/;"	f	class:SyncManager
RemovePeriodicSyncJob	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::RemovePeriodicSyncJob(string appId, PeriodicSyncJob* pJob)$/;"	f	class:RepositoryEngine
RemovePeriodicSyncJob	src/sync-service/SyncManager_SyncService.cpp	/^SyncService::RemovePeriodicSyncJob(const char* appId, account_h account, bundle* pExtras, const char* pCapability)$/;"	f	class:SyncService
RemovePeriodicSyncTime	src/sync-service/SyncManager_SyncStatusInfo.cpp	/^SyncStatusInfo::RemovePeriodicSyncTime(unsigned int index)$/;"	f	class:SyncStatusInfo
RemoveSyncAdapter	src/sync-service/SyncManager_SyncAdapterAggregator.cpp	/^SyncAdapterAggregator::RemoveSyncAdapter(const char* pServiceAppId, const char* pCapability)$/;"	f	class:SyncAdapterAggregator
RemoveSyncJob	src/sync-service/SyncManager_SyncJobQueue.cpp	/^SyncJobQueue::RemoveSyncJob(string appId, account_h account, const string capability)$/;"	f	class:SyncJobQueue
RemoveSyncJob	src/sync-service/SyncManager_SyncJobQueue.cpp	/^SyncJobQueue::RemoveSyncJob(string key)$/;"	f	class:SyncJobQueue
RemoveSyncJobFromCurrentSyncQueue	src/sync-service/SyncManager_CurrentSyncJobQueue.cpp	/^CurrentSyncJobQueue::RemoveSyncJobFromCurrentSyncQueue(CurrentSyncContext* pSyncContext)$/;"	f	class:CurrentSyncJobQueue
RemoveSyncJobsForApp	src/sync-service/SyncManager_SyncJobQueue.cpp	/^SyncJobQueue::RemoveSyncJobsForApp(string appId)$/;"	f	class:SyncJobQueue
RepositoryEngine	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::RepositoryEngine(void)$/;"	f	class:RepositoryEngine
RepositoryEngine	src/sync-service/SyncManager_RepositoryEngine.h	/^class RepositoryEngine$/;"	c
RequestData	src/sync-service/SyncManager_SyncWorker.h	/^	struct RequestData$/;"	s	class:SyncWorker
RequestSync	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::RequestSync(string appId, int accountId, const char* capability, bundle* pExtras)$/;"	f	class:SyncManager
RequestSync	src/sync-service/SyncManager_SyncService.cpp	/^SyncService::RequestSync(const char* appId, int accountId, bundle* pExtras, const char* pCapability)$/;"	f	class:SyncService
SCHEMA_SYNC_SETTINGS_CREATE_QUERY	src/sync-service/SyncManager_SettingsDbHelper.cpp	/^static const char* SCHEMA_SYNC_SETTINGS_CREATE_QUERY = "CREATE TABLE SYNC_SETTINGS_TABLE(" \\$/;"	v	file:
SOURCE_LOCAL	src/sync-service/SyncManager_SyncDefines.h	/^	SOURCE_LOCAL$/;"	e	enum:SyncSource
SOURCE_PERIODIC	src/sync-service/SyncManager_SyncDefines.h	/^	SOURCE_PERIODIC,$/;"	e	enum:SyncSource
SOURCE_POLL	src/sync-service/SyncManager_SyncDefines.h	/^	SOURCE_POLL,$/;"	e	enum:SyncSource
SOURCE_SERVER	src/sync-service/SyncManager_SyncDefines.h	/^	SOURCE_SERVER,$/;"	e	enum:SyncSource
SOURCE_USER	src/sync-service/SyncManager_SyncDefines.h	/^	SOURCE_USER = 0,$/;"	e	enum:SyncSource
SYNCABLE_STATE_UNKNOWN	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const string SYNCABLE_STATE_UNKNOWN						= "unknown";$/;"	v	file:
SYNC_ADAPTER_COMMON_DBUS_PATH	src/sync-client/sync_adapter.c	44;"	d	file:
SYNC_ADAPTER_DBUS_PATH	src/sync-client/sync_manager.c	34;"	d	file:
SYNC_ADAPTER_DBUS_PATH	src/sync-service/SyncManager_SyncService.cpp	47;"	d	file:
SYNC_ALARM	src/sync-service/SyncManager_SyncDefines.h	/^	SYNC_ALARM,$/;"	e	enum:SyncDispatchMessage
SYNC_CANCEL	src/sync-service/SyncManager_SyncDefines.h	/^	SYNC_CANCEL$/;"	e	enum:SyncDispatchMessage
SYNC_CHECK_ALARM	src/sync-service/SyncManager_SyncDefines.h	/^	SYNC_CHECK_ALARM,$/;"	e	enum:SyncDispatchMessage
SYNC_DIRECTORY	src/sync-service/SyncManager_RepositoryEngine.cpp	44;"	d	file:
SYNC_ERROR_ALREADY_IN_PROGRESS	include/sync-error.h	/^	SYNC_ERROR_ALREADY_IN_PROGRESS	= TIZEN_ERROR_ALREADY_IN_PROGRESS,	\/**< Duplicate data *\/$/;"	e	enum:__anon2
SYNC_ERROR_INVALID_OPERATION	include/sync-error.h	/^	SYNC_ERROR_INVALID_OPERATION	= TIZEN_ERROR_INVALID_OPERATION,	\/**< Error in Operation *\/$/;"	e	enum:__anon2
SYNC_ERROR_INVALID_PARAMETER	include/sync-error.h	/^	SYNC_ERROR_INVALID_PARAMETER	= TIZEN_ERROR_INVALID_PARAMETER,	\/**< Invalid parameter *\/$/;"	e	enum:__anon2
SYNC_ERROR_IO_ERROR	include/sync-error.h	/^	SYNC_ERROR_IO_ERROR				= TIZEN_ERROR_IO_ERROR,				\/**< I\/O error *\/$/;"	e	enum:__anon2
SYNC_ERROR_NONE	include/sync-error.h	/^	SYNC_ERROR_NONE					= TIZEN_ERROR_NONE,					\/**< Successful *\/$/;"	e	enum:__anon2
SYNC_ERROR_OUT_OF_MEMORY	include/sync-error.h	/^	SYNC_ERROR_OUT_OF_MEMORY		= TIZEN_ERROR_OUT_OF_MEMORY,		\/**< Out of memory *\/$/;"	e	enum:__anon2
SYNC_ERROR_PERMISSION_DENIED	include/sync-error.h	/^	SYNC_ERROR_PERMISSION_DENIED	= TIZEN_ERROR_PERMISSION_DENIED,	\/**< Permission denied *\/$/;"	e	enum:__anon2
SYNC_ERROR_SYSTEM	include/sync-error.h	/^	SYNC_ERROR_SYSTEM				= TIZEN_ERROR_SYNC_MANAGER | 0x01	\/**< System error *\/$/;"	e	enum:__anon2
SYNC_ERROR_UNKNOWN	include/sync-error.h	/^	SYNC_ERROR_UNKNOWN				= TIZEN_ERROR_UNKNOWN,				\/**< Unknown Error *\/$/;"	e	enum:__anon2
SYNC_FINISHED	src/sync-service/SyncManager_SyncDefines.h	/^	SYNC_FINISHED = 0,$/;"	e	enum:SyncDispatchMessage
SYNC_IPC_MARSHAL_H_	common/sync-ipc-marshal.h	18;"	d
SYNC_LOGE_RET_RES	common/sync-log.h	53;"	d
SYNC_LOG_H_	common/sync-log.h	19;"	d
SYNC_LOG_IF	common/sync-log.h	81;"	d
SYNC_MANAGER_DBUS_PATH	src/sync-client/sync_adapter.c	43;"	d	file:
SYNC_MANAGER_DBUS_PATH	src/sync-client/sync_manager.c	33;"	d	file:
SYNC_MANAGER_DBUS_PATH	src/sync-service/SyncManager_SyncService.cpp	46;"	d	file:
SYNC_OPTION_EXPEDITED	include/sync_manager.h	55;"	d
SYNC_OPTION_NO_RETRY	include/sync_manager.h	48;"	d
SYNC_PERIOD_INTERVAL_10MIN	include/sync_manager.h	/^	SYNC_PERIOD_INTERVAL_10MIN,			\/**< Sync within 10 minutes *\/$/;"	e	enum:__anon1
SYNC_PERIOD_INTERVAL_12H	include/sync_manager.h	/^	SYNC_PERIOD_INTERVAL_12H,			\/**< Sync within 12 hours *\/$/;"	e	enum:__anon1
SYNC_PERIOD_INTERVAL_15MIN	include/sync_manager.h	/^	SYNC_PERIOD_INTERVAL_15MIN,			\/**< Sync within 15 minutes *\/$/;"	e	enum:__anon1
SYNC_PERIOD_INTERVAL_1DAY	include/sync_manager.h	/^	SYNC_PERIOD_INTERVAL_1DAY,			\/**< Sync within 1 day *\/$/;"	e	enum:__anon1
SYNC_PERIOD_INTERVAL_1H	include/sync_manager.h	/^	SYNC_PERIOD_INTERVAL_1H,			\/**< Sync within 1 hour *\/$/;"	e	enum:__anon1
SYNC_PERIOD_INTERVAL_20MIN	include/sync_manager.h	/^	SYNC_PERIOD_INTERVAL_20MIN,			\/**< Sync within 20 minutes *\/$/;"	e	enum:__anon1
SYNC_PERIOD_INTERVAL_2H	include/sync_manager.h	/^	SYNC_PERIOD_INTERVAL_2H,			\/**< Sync within 2 hours *\/$/;"	e	enum:__anon1
SYNC_PERIOD_INTERVAL_30MIN	include/sync_manager.h	/^	SYNC_PERIOD_INTERVAL_30MIN,			\/**< Sync within 30 minutes *\/$/;"	e	enum:__anon1
SYNC_PERIOD_INTERVAL_3H	include/sync_manager.h	/^	SYNC_PERIOD_INTERVAL_3H,			\/**< Sync within 3 hours *\/$/;"	e	enum:__anon1
SYNC_PERIOD_INTERVAL_45MIN	include/sync_manager.h	/^	SYNC_PERIOD_INTERVAL_45MIN,			\/**< Sync within 45 minutes *\/$/;"	e	enum:__anon1
SYNC_PERIOD_INTERVAL_5MIN	include/sync_manager.h	/^	SYNC_PERIOD_INTERVAL_5MIN = 0,		\/**< Sync within 5 minutes *\/$/;"	e	enum:__anon1
SYNC_PERIOD_INTERVAL_6H	include/sync_manager.h	/^	SYNC_PERIOD_INTERVAL_6H,			\/**< Sync within 6 hours *\/$/;"	e	enum:__anon1
SYNC_PERIOD_INTERVAL_MAX	include/sync_manager.h	/^	SYNC_PERIOD_INTERVAL_MAX = SYNC_PERIOD_INTERVAL_1DAY + 1$/;"	e	enum:__anon1
SYNC_SERVICE_BATTERY_STATUS_LISTENER_H	src/sync-service/SyncManager_BatteryStatusListener.h	24;"	d
SYNC_SERVICE_CAPABILITY_INFO_H	src/sync-service/SyncManager_CapabilityInfo.h	23;"	d
SYNC_SERVICE_CURRENT_SYNC_CONTEXT_H	src/sync-service/SyncManager_CurrentSyncContext.h	23;"	d
SYNC_SERVICE_CURRENT_SYNC_JOB_QUEUE_H	src/sync-service/SyncManager_CurrentSyncJobQueue.h	23;"	d
SYNC_SERVICE_DAY_STATS_H	src/sync-service/SyncManager_DayStats.h	23;"	d
SYNC_SERVICE_HISTORY_ITEM_H	src/sync-service/SyncManager_HistoryItem.h	23;"	d
SYNC_SERVICE_JSONPARSER_H	src/sync-service/SyncManager_JsonParser.h	23;"	d
SYNC_SERVICE_NETWORK_CHANGE_LISTENER_H	src/sync-service/SyncManager_NetworkChangeListener.h	25;"	d
SYNC_SERVICE_PENDING_JOB_H	src/sync-service/SyncManager_PendingJob.h	23;"	d
SYNC_SERVICE_PERIODIC_SYNC_H	src/sync-service/SyncManager_PeriodicSyncJob.h	23;"	d
SYNC_SERVICE_PROVIDER_SETTINGS_H	src/sync-service/SyncManager_ProviderSettings.h	23;"	d
SYNC_SERVICE_REPOSITORY_ENGINE_H	src/sync-service/SyncManager_RepositoryEngine.h	24;"	d
SYNC_SERVICE_SERVICE_INTERFACE_H	src/sync-service/SyncManager_ServiceInterface.h	18;"	d
SYNC_SERVICE_SETTINGS_DB_HELPER_H	src/sync-service/SyncManager_SettingsDbHelper.h	23;"	d
SYNC_SERVICE_SETTING_DB_JOURNAL_PATH	src/sync-service/SyncManager_SettingsDbHelper.cpp	31;"	d	file:
SYNC_SERVICE_SETTING_DB_PATH	src/sync-service/SyncManager_SettingsDbHelper.cpp	30;"	d	file:
SYNC_SERVICE_SINGLETON_H	src/sync-service/SyncManager_Singleton.h	18;"	d
SYNC_SERVICE_STATUS_INFO_H	src/sync-service/SyncManager_SyncStatusInfo.h	24;"	d
SYNC_SERVICE_STORAGE_CHANGE_LISTENER_H	src/sync-service/SyncManager_StorageChangeListener.h	23;"	d
SYNC_SERVICE_SYNC_ADAPTER_AGGREGATOR_H	src/sync-service/SyncManager_SyncAdapterAggregator.h	23;"	d
SYNC_SERVICE_SYNC_DEFINES_H	src/sync-service/SyncManager_SyncDefines.h	18;"	d
SYNC_SERVICE_SYNC_JOB_DISPATCHER_H	src/sync-service/SyncManager_SyncJobDispatcher.h	24;"	d
SYNC_SERVICE_SYNC_JOB_H	src/sync-service/SyncManager_SyncJob.h	24;"	d
SYNC_SERVICE_SYNC_JOB_QUEUE_H	src/sync-service/SyncManager_SyncJobQueue.h	24;"	d
SYNC_SERVICE_SYNC_MANAGER_H	src/sync-service/SyncManager_SyncManager.h	23;"	d
SYNC_SERVICE_SYNC_SERVICE_H	src/sync-service/SyncManager_SyncService.h	25;"	d
SYNC_SERVICE_SYNC_WORKER_H	src/sync-service/SyncManager_SyncWorker.h	23;"	d
SYNC_SERVICE_SYNC_WORKER_RESULT_LISTENER_H	src/sync-service/SyncManager_SyncWorkerResultListener.h	18;"	d
SYNC_SETTINGS_TABLE	src/sync-service/SyncManager_SettingsDbHelper.cpp	32;"	d	file:
SYNC_STATUS_CANCELLED	src/sync-client/sync_adapter.c	/^	SYNC_STATUS_CANCELLED =  -1,$/;"	e	enum:__anon3	file:
SYNC_STATUS_CANCELLED	src/sync-service/SyncManager_SyncDefines.h	/^	SYNC_STATUS_CANCELLED =  -1,$/;"	e	enum:SyncStatus
SYNC_STATUS_FAILURE	src/sync-client/sync_adapter.c	/^	SYNC_STATUS_FAILURE = -3$/;"	e	enum:__anon3	file:
SYNC_STATUS_FAILURE	src/sync-service/SyncManager_SyncDefines.h	/^	SYNC_STATUS_FAILURE = -3$/;"	e	enum:SyncStatus
SYNC_STATUS_SUCCESS	src/sync-client/sync_adapter.c	/^	SYNC_STATUS_SUCCESS = 0,$/;"	e	enum:__anon3	file:
SYNC_STATUS_SUCCESS	src/sync-service/SyncManager_SyncDefines.h	/^	SYNC_STATUS_SUCCESS = 0,$/;"	e	enum:SyncStatus
SYNC_STATUS_SYNC_ALREADY_IN_PROGRESS	src/sync-client/sync_adapter.c	/^	SYNC_STATUS_SYNC_ALREADY_IN_PROGRESS = -2,$/;"	e	enum:__anon3	file:
SYNC_STATUS_SYNC_ALREADY_IN_PROGRESS	src/sync-service/SyncManager_SyncDefines.h	/^	SYNC_STATUS_SYNC_ALREADY_IN_PROGRESS = -2,$/;"	e	enum:SyncStatus
SYNC_THREAD	src/sync-client/sync_adapter.c	41;"	d	file:
SYS_DBUS_INTERFACE	src/sync-service/main.cpp	32;"	d	file:
SYS_DBUS_MATCH_RULE	src/sync-service/main.cpp	33;"	d	file:
SaveCurrentState	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::SaveCurrentState(void)$/;"	f	class:RepositoryEngine
ScheduleAccountLessSync	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::ScheduleAccountLessSync(string appId, int reason, bundle* pExtras,$/;"	f	class:SyncManager
SchedulePeriodicSyncJobs	src/sync-service/SyncManager_SyncJobDispatcher.cpp	/^SyncJobDispatcher::SchedulePeriodicSyncJobs(void)$/;"	f	class:SyncJobDispatcher
ScheduleSync	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::ScheduleSync(string appId, int accountId, string capability, int reason, bundle* pExtras,$/;"	f	class:SyncManager
ScheduleSyncJob	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::ScheduleSyncJob(SyncJob* pJob, bool fireCheckAlarm)$/;"	f	class:SyncManager
SendCancelSyncsMessage	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::SendCancelSyncsMessage(SyncJob* pJob)$/;"	f	class:SyncManager
SendSyncAlarmMessage	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::SendSyncAlarmMessage()$/;"	f	class:SyncManager
SendSyncCheckAlarmMessage	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::SendSyncCheckAlarmMessage()$/;"	f	class:SyncManager
SendSyncCompletedOrCancelledMessage	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::SendSyncCompletedOrCancelledMessage(SyncJob *pJob, int result)$/;"	f	class:SyncManager
SetAccountTypeId	src/sync-service/SyncManager_ProviderSettings.cpp	/^ProviderSetting::SetAccountTypeId(int accountTypeId)$/;"	f	class:ProviderSetting
SetAllowParallelSync	src/sync-service/SyncManager_ProviderSettings.cpp	/^ProviderSetting::SetAllowParallelSync(bool isParallelSyncAllowed)$/;"	f	class:ProviderSetting
SetAlwaysSyncable	src/sync-service/SyncManager_ProviderSettings.cpp	/^ProviderSetting::SetAlwaysSyncable(bool isAlwaysSyncable)$/;"	f	class:ProviderSetting
SetAppLaunchListener	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::SetAppLaunchListener(void)$/;"	f	class:SyncManager
SetAuthorityId	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::SetAuthorityId(int id)$/;"	f	class:HistoryItem
SetBackoffValue	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::SetBackoffValue(string appId, account_h account, string providerName, long nextSyncTime, long nextDelay)$/;"	f	class:RepositoryEngine
SetDay	src/sync-service/SyncManager_DayStats.cpp	/^void DayStats::SetDay(int days)$/;"	f	class:DayStats
SetDelayTimeValue	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::SetDelayTimeValue(SyncJob* pJob, long delayUntilSeconds)$/;"	f	class:SyncManager
SetDownstreamActivity	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::SetDownstreamActivity(long activity)$/;"	f	class:HistoryItem
SetElapsedTime	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::SetElapsedTime(int time)$/;"	f	class:HistoryItem
SetEvent	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::SetEvent(int event)$/;"	f	class:HistoryItem
SetEventTime	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::SetEventTime(int time)$/;"	f	class:HistoryItem
SetExtras	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::SetExtras(map<string, int>* data)$/;"	f	class:HistoryItem
SetFailureCount	src/sync-service/SyncManager_DayStats.cpp	/^void DayStats::SetFailureCount(int count)$/;"	f	class:DayStats
SetFailureTime	src/sync-service/SyncManager_DayStats.cpp	/^void DayStats::SetFailureTime(long time)$/;"	f	class:DayStats
SetHistoryId	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::SetHistoryId(int id)$/;"	f	class:HistoryItem
SetInitialized	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::SetInitialized(bool isInitialized)$/;"	f	class:HistoryItem
SetJobExtraValue	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::SetJobExtraValue(const char* data, bool val)$/;"	f	class:SyncJob
SetMsg	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::SetMsg(string msg)$/;"	f	class:HistoryItem
SetPeriodicSyncTime	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::SetPeriodicSyncTime(int capabilityId, PeriodicSyncJob* pJob , long long when)$/;"	f	class:RepositoryEngine
SetPeriodicSyncTime	src/sync-service/SyncManager_SyncStatusInfo.cpp	/^SyncStatusInfo::SetPeriodicSyncTime(unsigned int index, long long when)$/;"	f	class:SyncStatusInfo
SetPkgMgrClientStatusChangedListener	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::SetPkgMgrClientStatusChangedListener(void)$/;"	f	class:SyncManager
SetReason	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::SetReason(int reason)$/;"	f	class:HistoryItem
SetSource	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::SetSource(int src)$/;"	f	class:HistoryItem
SetSuccessCount	src/sync-service/SyncManager_DayStats.cpp	/^void DayStats::SetSuccessCount(int count)$/;"	f	class:DayStats
SetSuccessTime	src/sync-service/SyncManager_DayStats.cpp	/^void DayStats::SetSuccessTime(long time)$/;"	f	class:DayStats
SetSupportsUploading	src/sync-service/SyncManager_ProviderSettings.cpp	/^ProviderSetting::SetSupportsUploading(bool isUploadSupported)$/;"	f	class:ProviderSetting
SetSyncSetting	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::SetSyncSetting(bool enable)$/;"	f	class:SyncManager
SetSyncable	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::SetSyncable(string appId, account_h account, string capability, int syncable)$/;"	f	class:RepositoryEngine
SetTimerId	src/sync-service/SyncManager_CurrentSyncContext.cpp	/^CurrentSyncContext::SetTimerId(long id)$/;"	f	class:CurrentSyncContext
SetUpstreamActivity	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::SetUpstreamActivity(long activity)$/;"	f	class:HistoryItem
SetUserVisible	src/sync-service/SyncManager_ProviderSettings.cpp	/^ProviderSetting::SetUserVisible(bool isVisible)$/;"	f	class:ProviderSetting
SettingDBHelper	src/sync-service/SyncManager_SettingsDbHelper.cpp	/^SettingDBHelper::SettingDBHelper(void)$/;"	f	class:SettingDBHelper
SettingDBHelper	src/sync-service/SyncManager_SettingsDbHelper.h	/^class SettingDBHelper$/;"	c
ShutdownInitiated	src/sync-service/main.cpp	/^static bool ShutdownInitiated = false;$/;"	v	file:
Singleton	src/sync-service/SyncManager_Singleton.h	/^	Singleton(void) {}$/;"	f	class:Singleton
Singleton	src/sync-service/SyncManager_Singleton.h	/^class Singleton$/;"	c
StartService	src/sync-service/SyncManager_SyncService.cpp	/^SyncService::StartService()$/;"	f	class:SyncService
StorageChangeListener	src/sync-service/SyncManager_StorageChangeListener.cpp	/^StorageChangeListener::StorageChangeListener(void)$/;"	f	class:StorageChangeListener
StorageChangeListener	src/sync-service/SyncManager_StorageChangeListener.h	/^class StorageChangeListener$/;"	c
SubscribeCalendarCallback	src/sync-service/SyncManager_DataChangeListener.cpp	/^int DataChangeListener::SubscribeCalendarCallback(void)$/;"	f	class:DataChangeListener
SubscribeContactsCallback	src/sync-service/SyncManager_DataChangeListener.cpp	/^int DataChangeListener::SubscribeContactsCallback(void)$/;"	f	class:DataChangeListener
SyncAdapter	src/sync-service/SyncManager_SyncAdapterAggregator.h	/^	SyncAdapter(const char* pAccoutProviderAppId, const char* pServiceAppId, const char* pCapability)$/;"	f	class:SyncAdapterAggregator::SyncAdapter
SyncAdapter	src/sync-service/SyncManager_SyncAdapterAggregator.h	/^class SyncAdapter$/;"	c	class:SyncAdapterAggregator
SyncAdapterAggregator	src/sync-service/SyncManager_SyncAdapterAggregator.cpp	/^SyncAdapterAggregator::SyncAdapterAggregator(void)$/;"	f	class:SyncAdapterAggregator
SyncAdapterAggregator	src/sync-service/SyncManager_SyncAdapterAggregator.h	/^class SyncAdapterAggregator$/;"	c
SyncDispatchMessage	src/sync-service/SyncManager_SyncDefines.h	/^enum SyncDispatchMessage$/;"	g
SyncJob	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::SyncJob(const SyncJob& job)$/;"	f	class:SyncJob
SyncJob	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::SyncJob(const string appId, account_h account, const string capability, bundle* pExtras, SyncReason reason, SyncSource source,$/;"	f	class:SyncJob
SyncJob	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::SyncJob(void)$/;"	f	class:SyncJob
SyncJob	src/sync-service/SyncManager_SyncJob.h	/^class SyncJob$/;"	c
SyncJobDispatcher	src/sync-service/SyncManager_SyncJobDispatcher.cpp	/^SyncJobDispatcher::SyncJobDispatcher(void)$/;"	f	class:SyncJobDispatcher
SyncJobDispatcher	src/sync-service/SyncManager_SyncJobDispatcher.h	/^class SyncJobDispatcher$/;"	c
SyncJobQueue	src/sync-service/SyncManager_SyncJobQueue.cpp	/^SyncJobQueue::SyncJobQueue(RepositoryEngine* pSyncRepositoryEngine)$/;"	f	class:SyncJobQueue
SyncJobQueue	src/sync-service/SyncManager_SyncJobQueue.cpp	/^SyncJobQueue::SyncJobQueue(void)$/;"	f	class:SyncJobQueue
SyncJobQueue	src/sync-service/SyncManager_SyncJobQueue.h	/^class SyncJobQueue$/;"	c
SyncManager	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::SyncManager(void)$/;"	f	class:SyncManager
SyncManager	src/sync-service/SyncManager_SyncManager.h	/^class SyncManager$/;"	c
SyncReason	src/sync-service/SyncManager_SyncDefines.h	/^enum SyncReason$/;"	g
SyncSatus	src/sync-client/sync_adapter.c	/^} SyncSatus;$/;"	t	typeref:enum:__anon3	file:
SyncService	src/sync-service/SyncManager_SyncService.cpp	/^SyncService::SyncService(void)$/;"	f	class:SyncService
SyncService	src/sync-service/SyncManager_SyncService.h	/^class SyncService$/;"	c
SyncSource	src/sync-service/SyncManager_SyncDefines.h	/^enum SyncSource$/;"	g
SyncStatus	src/sync-service/SyncManager_SyncDefines.h	/^enum SyncStatus$/;"	g
SyncStatusInfo	src/sync-service/SyncManager_SyncStatusInfo.cpp	/^SyncStatusInfo::SyncStatusInfo(SyncStatusInfo &other)$/;"	f	class:SyncStatusInfo
SyncStatusInfo	src/sync-service/SyncManager_SyncStatusInfo.cpp	/^SyncStatusInfo::SyncStatusInfo(int capabilityId)$/;"	f	class:SyncStatusInfo
SyncStatusInfo	src/sync-service/SyncManager_SyncStatusInfo.cpp	/^SyncStatusInfo::SyncStatusInfo(string statusInfo)$/;"	f	class:SyncStatusInfo
SyncStatusInfo	src/sync-service/SyncManager_SyncStatusInfo.h	/^class SyncStatusInfo$/;"	c
SyncWorker	src/sync-service/SyncManager_SyncWorker.cpp	/^SyncWorker::SyncWorker(void)$/;"	f	class:SyncWorker
SyncWorker	src/sync-service/SyncManager_SyncWorker.h	/^class SyncWorker$/;"	c
TIZEN_DEBUG_ENABLE	common/sync-log.h	30;"	d
ThreadLoop	src/sync-service/SyncManager_SyncWorker.cpp	/^SyncWorker::ThreadLoop(gpointer data)$/;"	f	class:SyncWorker
ToKey	src/sync-service/SyncManager_CurrentSyncJobQueue.cpp	/^CurrentSyncJobQueue::ToKey(account_h account, string capability)$/;"	f	class:CurrentSyncJobQueue
ToKey	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::ToKey(void)$/;"	f	class:SyncJob
TriggerStartSync	src/sync-service/SyncManager_SyncService.cpp	/^SyncService::TriggerStartSync(const char* appId, int accountId, bundle* pExtras, const char* pCapability)$/;"	f	class:SyncService
TriggerStopSync	src/sync-service/SyncManager_SyncService.cpp	/^SyncService::TriggerStopSync(const char* appId, account_h account, const char* pCapability)$/;"	f	class:SyncService
TryStartingNextJobLocked	src/sync-service/SyncManager_SyncJobDispatcher.cpp	/^SyncJobDispatcher::TryStartingNextJobLocked()$/;"	f	class:SyncJobDispatcher
TryToRescheduleJob	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::TryToRescheduleJob(SyncStatus syncResult, SyncJob* pJob)$/;"	f	class:SyncManager
USER_DATA	src/sync-service/SyncManager_JsonParser.cpp	/^static const gchar* USER_DATA = "user_data";$/;"	v	file:
USER_ID	src/sync-service/SyncManager_JsonParser.cpp	/^static const gchar* USER_ID = "user_id";$/;"	v	file:
UnSubscribeCalendarCallback	src/sync-service/SyncManager_DataChangeListener.cpp	/^int DataChangeListener::UnSubscribeCalendarCallback(void)$/;"	f	class:DataChangeListener
UnSubscribeContactsCallback	src/sync-service/SyncManager_DataChangeListener.cpp	/^int DataChangeListener::UnSubscribeContactsCallback(void)$/;"	f	class:DataChangeListener
UpdateEffectiveRunTime	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::UpdateEffectiveRunTime(void)$/;"	f	class:SyncJob
UpdateRunningAccounts	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::UpdateRunningAccounts(void)$/;"	f	class:SyncManager
UpdateSyncSettings	src/sync-service/SyncManager_SettingsDbHelper.cpp	/^SettingDBHelper::UpdateSyncSettings(const ProviderSetting& providerSettings)$/;"	f	class:SettingDBHelper
VALUE_UNDEFINED	src/sync-service/SyncManager_SyncDefines.h	26;"	d
VCONF_HOME_SCREEN	src/sync-service/SyncManager_SyncManager.cpp	43;"	d	file:
VCONF_LOCK_SCREEN	src/sync-service/SyncManager_SyncManager.cpp	44;"	d	file:
WIFI_CONNECTED	src/sync-service/SyncManager_SyncDefines.h	/^	WIFI_CONNECTED$/;"	e	enum:WifiStatus
WIFI_DIRECT_ACTIVATED	src/sync-service/SyncManager_SyncDefines.h	/^	WIFI_DIRECT_ACTIVATED,$/;"	e	enum:WifiDirect
WIFI_DIRECT_CONNECTED	src/sync-service/SyncManager_SyncDefines.h	/^	WIFI_DIRECT_CONNECTED,$/;"	e	enum:WifiDirect
WIFI_DIRECT_DEACTIVATED	src/sync-service/SyncManager_SyncDefines.h	/^	WIFI_DIRECT_DEACTIVATED  = 0,$/;"	e	enum:WifiDirect
WIFI_DIRECT_DISCOVERING	src/sync-service/SyncManager_SyncDefines.h	/^	WIFI_DIRECT_DISCOVERING,$/;"	e	enum:WifiDirect
WIFI_DIRECT_GROUP_OWNER	src/sync-service/SyncManager_SyncDefines.h	/^	WIFI_DIRECT_GROUP_OWNER$/;"	e	enum:WifiDirect
WIFI_NOT_CONNECTED	src/sync-service/SyncManager_SyncDefines.h	/^	WIFI_NOT_CONNECTED,$/;"	e	enum:WifiStatus
WIFI_OFF	src/sync-service/SyncManager_SyncDefines.h	/^	WIFI_OFF,$/;"	e	enum:WifiStatus
WifiDirect	src/sync-service/SyncManager_SyncDefines.h	/^enum WifiDirect$/;"	g
WifiStatus	src/sync-service/SyncManager_SyncDefines.h	/^enum WifiStatus$/;"	g
WriteAccountData	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::WriteAccountData(void)$/;"	f	class:RepositoryEngine
WriteStatusData	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::WriteStatusData(void)$/;"	f	class:RepositoryEngine
WriteSyncAdapters	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::WriteSyncAdapters(void)$/;"	f	class:RepositoryEngine
WriteSyncJobsData	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::WriteSyncJobsData(void)$/;"	f	class:RepositoryEngine
XML_ATTR_ACCOUNT_ID	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_ACCOUNT_ID[]						= "accountId";$/;"	v	file:
XML_ATTR_ACCOUNT_TYPE	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_ACCOUNT_TYPE[]					= "accountType";$/;"	v	file:
XML_ATTR_APP_ID	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_APP_ID[]							= "appId";$/;"	v	file:
XML_ATTR_CAPABILITY	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_CAPABILITY[]						= "capability";$/;"	v	file:
XML_ATTR_CAPABILITY_ID	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_CAPABILITY_ID[]					= "id";$/;"	v	file:
XML_ATTR_ENABLED	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_ENABLED[]							= "enabled";$/;"	v	file:
XML_ATTR_JOBS_COUNT	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_JOBS_COUNT[]						= "count";$/;"	v	file:
XML_ATTR_JOB_ACCOUNT_ID	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_JOB_ACCOUNT_ID[]					= "accountId";$/;"	v	file:
XML_ATTR_JOB_APP_ID	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_JOB_APP_ID[]						= "appId";$/;"	v	file:
XML_ATTR_JOB_BACKOFF	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_JOB_BACKOFF[]						= "backoff";$/;"	v	file:
XML_ATTR_JOB_CAPABILITY	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_JOB_CAPABILITY[]					= "capability";$/;"	v	file:
XML_ATTR_JOB_DELAY_UNTIL	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_JOB_DELAY_UNTIL[]					= "delayUntil";$/;"	v	file:
XML_ATTR_JOB_FLEX_TIME	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_JOB_FLEX_TIME[]					= "flex";$/;"	v	file:
XML_ATTR_JOB_KEY	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_JOB_KEY[]							= "key";$/;"	v	file:
XML_ATTR_JOB_PARALLEL_SYNC_ALLOWED	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_JOB_PARALLEL_SYNC_ALLOWED[]		= "parallelSyncAllowed";$/;"	v	file:
XML_ATTR_JOB_REASON	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_JOB_REASON[]						= "reason";$/;"	v	file:
XML_ATTR_JOB_SOURCE	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_JOB_SOURCE[]						= "source";$/;"	v	file:
XML_ATTR_NEXT_CAPABILITY_ID	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_NEXT_CAPABILITY_ID[]				= "nextCapabilityId";$/;"	v	file:
XML_ATTR_PERIODIC_SYNC_FLEX	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_PERIODIC_SYNC_FLEX[]				= "flex";$/;"	v	file:
XML_ATTR_PERIODIC_SYNC_PEIOD	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_PERIODIC_SYNC_PEIOD[]				= "period";$/;"	v	file:
XML_ATTR_SYNCABLE	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_SYNCABLE[]						= "syncable";$/;"	v	file:
XML_ATTR_SYNCADAPTERS_COUNT	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_SYNCADAPTERS_COUNT[]				= "count";$/;"	v	file:
XML_ATTR_SYNCADAPTER_ACCOUNT_PROVIDER_ID	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_SYNCADAPTER_ACCOUNT_PROVIDER_ID[]	= "account-provider-id";$/;"	v	file:
XML_ATTR_SYNCADAPTER_CAPABILITY	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_SYNCADAPTER_CAPABILITY[]			= "capability";$/;"	v	file:
XML_ATTR_SYNCADAPTER_SERVICE_APP_ID	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_SYNCADAPTER_SERVICE_APP_ID[]		= "service-app-id";$/;"	v	file:
XML_ATTR_SYNC_EXTRA_KEY	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_SYNC_EXTRA_KEY[]					= "key";$/;"	v	file:
XML_ATTR_SYNC_EXTRA_VALUE	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_SYNC_EXTRA_VALUE[]				= "value";$/;"	v	file:
XML_ATTR_SYNC_RANDOM_OFFSET	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_ATTR_SYNC_RANDOM_OFFSET[]				= "randomOffsetInSec";$/;"	v	file:
XML_NODE_ACCOUNTS	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_NODE_ACCOUNTS[]						= "accounts";$/;"	v	file:
XML_NODE_CAPABILITY	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_NODE_CAPABILITY[]						= "capability";$/;"	v	file:
XML_NODE_JOBS	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_NODE_JOBS[]							= "jobs";$/;"	v	file:
XML_NODE_PERIODIC_SYNC	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_NODE_PERIODIC_SYNC[]					= "periodicSync";$/;"	v	file:
XML_NODE_SYNCADAPTER	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_NODE_SYNCADAPTER[]						= "sync-adapter";$/;"	v	file:
XML_NODE_SYNCADAPTERS	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_NODE_SYNCADAPTERS[]					= "sync-adapters";$/;"	v	file:
XML_NODE_SYNC_EXTRA	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_NODE_SYNC_EXTRA[]						= "extra";$/;"	v	file:
XML_NODE_SYNC_JOB	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar XML_NODE_SYNC_JOB[]						= "job";$/;"	v	file:
_SYNC_SERVICE_DATA_CHANGED_LISTENER_H_	src/sync-service/SyncManager_DataChangeListener.h	24;"	d
_VERSION	src/sync-service/SyncManager_RepositoryEngine.cpp	/^static const xmlChar _VERSION[]				= "1.0";$/;"	v	file:
__SYNC_ADAPTER_H__	include/sync_adapter.h	19;"	d
__SYNC_ERROR_H__	include/sync-error.h	19;"	d
__SYNC_MANAGER_DOC_H__	doc/sync_manager_doc.h	20;"	d
__SYNC_MANAGER_H__	include/sync_manager.h	19;"	d
__SYNC_MANAGER_INTERNAL_H__	include/sync_manager_internal.h	19;"	d
__accountSubscriptionHandle	src/sync-service/SyncManager_SyncManager.h	/^	account_subscribe_h __accountSubscriptionHandle;$/;"	m	class:SyncManager
__accountTypeId	src/sync-service/SyncManager_ProviderSettings.h	/^	int __accountTypeId;$/;"	m	class:ProviderSetting
__accounts	src/sync-service/SyncManager_RepositoryEngine.h	/^	map<int, AccountInfo*> __accounts;$/;"	m	class:RepositoryEngine
__authorityId	src/sync-service/SyncManager_HistoryItem.h	/^	int __authorityId;$/;"	m	class:HistoryItem
__capabilities	src/sync-service/SyncManager_RepositoryEngine.h	/^	map<int, CapabilityInfo*> __capabilities;$/;"	m	class:RepositoryEngine
__capabilityInfoMutex	src/sync-service/SyncManager_RepositoryEngine.h	/^	pthread_mutex_t __capabilityInfoMutex;$/;"	m	class:RepositoryEngine
__currJobQueueMutex	src/sync-service/SyncManager_SyncManager.h	/^	pthread_mutex_t __currJobQueueMutex;$/;"	m	class:SyncManager
__currentSyncJobQueue	src/sync-service/SyncManager_CurrentSyncJobQueue.h	/^	map<const string, CurrentSyncContext*> __currentSyncJobQueue;$/;"	m	class:CurrentSyncJobQueue
__day	src/sync-service/SyncManager_DayStats.h	/^	int __day;$/;"	m	class:DayStats
__downstreamActivity	src/sync-service/SyncManager_HistoryItem.h	/^	long __downstreamActivity;$/;"	m	class:HistoryItem
__elapsedTime	src/sync-service/SyncManager_HistoryItem.h	/^	long __elapsedTime;$/;"	m	class:HistoryItem
__event	src/sync-service/SyncManager_HistoryItem.h	/^	int __event;$/;"	m	class:HistoryItem
__eventTime	src/sync-service/SyncManager_HistoryItem.h	/^	long __eventTime;$/;"	m	class:HistoryItem
__failureCount	src/sync-service/SyncManager_DayStats.h	/^	int __failureCount;$/;"	m	class:DayStats
__failureTime	src/sync-service/SyncManager_DayStats.h	/^	long __failureTime;$/;"	m	class:DayStats
__historyId	src/sync-service/SyncManager_HistoryItem.h	/^	int __historyId;$/;"	m	class:HistoryItem
__initialize_dbus	src/sync-service/SyncManager_SyncService.cpp	/^__initialize_dbus()$/;"	f	file:
__isAlwaysSyncable	src/sync-service/SyncManager_ProviderSettings.h	/^	bool __isAlwaysSyncable;$/;"	m	class:ProviderSetting
__isInitialized	src/sync-service/SyncManager_HistoryItem.h	/^	bool __isInitialized;$/;"	m	class:HistoryItem
__isParallelSyncAllowed	src/sync-service/SyncManager_ProviderSettings.h	/^	bool __isParallelSyncAllowed;$/;"	m	class:ProviderSetting
__isSimDataConnectionPresent	src/sync-service/SyncManager_SyncManager.h	/^	bool __isSimDataConnectionPresent;$/;"	m	class:SyncManager
__isStorageLow	src/sync-service/SyncManager_SyncManager.h	/^	bool __isStorageLow;$/;"	m	class:SyncManager
__isSyncPermitted	src/sync-service/SyncManager_SyncManager.h	/^	bool __isSyncPermitted;$/;"	m	class:SyncManager
__isUPSModeEnabled	src/sync-service/SyncManager_SyncManager.h	/^	bool __isUPSModeEnabled;$/;"	m	class:SyncManager
__isUploadSupported	src/sync-service/SyncManager_ProviderSettings.h	/^	bool __isUploadSupported;$/;"	m	class:ProviderSetting
__isVisible	src/sync-service/SyncManager_ProviderSettings.h	/^	bool __isVisible;$/;"	m	class:ProviderSetting
__isWifiConnectionPresent	src/sync-service/SyncManager_SyncManager.h	/^	bool __isWifiConnectionPresent;$/;"	m	class:SyncManager
__message	src/sync-service/SyncManager_SyncWorker.h	/^	SyncDispatchMessage __message;$/;"	m	class:SyncWorker
__msg	src/sync-service/SyncManager_HistoryItem.h	/^	string __msg;$/;"	m	class:HistoryItem
__mutex	src/sync-service/SyncManager_SettingsDbHelper.h	/^	pthread_mutex_t __mutex;$/;"	m	class:SettingDBHelper
__nextCapabilityId	src/sync-service/SyncManager_RepositoryEngine.h	/^	int __nextCapabilityId;$/;"	m	class:RepositoryEngine
__numPendingFinished	src/sync-service/SyncManager_RepositoryEngine.h	/^	int __numPendingFinished;$/;"	m	class:RepositoryEngine
__pAccountProviderId	src/sync-service/SyncManager_SyncAdapterAggregator.h	/^	char* __pAccountProviderId;$/;"	m	class:SyncAdapterAggregator::SyncAdapter
__pAppId	src/sync-service/SyncManager_SyncAdapterAggregator.h	/^	char* __pAppId;$/;"	m	class:SyncAdapterAggregator::SyncAdapter
__pBatteryStatusListener	src/sync-service/SyncManager_SyncManager.h	/^	BatteryStatusListener* __pBatteryStatusListener;$/;"	m	class:SyncManager
__pCapability	src/sync-service/SyncManager_SyncAdapterAggregator.h	/^	char* __pCapability;$/;"	m	class:SyncAdapterAggregator::SyncAdapter
__pChannel	src/sync-service/SyncManager_SyncWorker.h	/^	GIOChannel* __pChannel;$/;"	m	class:SyncWorker
__pContext	src/sync-service/SyncManager_SyncWorker.h	/^	GMainContext* __pContext;$/;"	m	class:SyncWorker
__pCurrentSyncJob	src/sync-service/SyncManager_CurrentSyncContext.h	/^	SyncJob* __pCurrentSyncJob; \/\/owned$/;"	m	class:CurrentSyncContext
__pCurrentSyncJobQueue	src/sync-service/SyncManager_SyncManager.h	/^	CurrentSyncJobQueue* __pCurrentSyncJobQueue;$/;"	m	class:SyncManager
__pDBHandle	src/sync-service/SyncManager_SettingsDbHelper.h	/^	sqlite3* __pDBHandle;$/;"	m	class:SettingDBHelper
__pDataChangeListener	src/sync-service/SyncManager_SyncManager.h	/^	DataChangeListener* __pDataChangeListener;$/;"	m	class:SyncManager
__pExtras	src/sync-service/SyncManager_HistoryItem.h	/^	map<string, string>* __pExtras;$/;"	m	class:HistoryItem
__pInstance	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine* RepositoryEngine::__pInstance = NULL;$/;"	m	class:RepositoryEngine	file:
__pInstance	src/sync-service/SyncManager_RepositoryEngine.h	/^	static RepositoryEngine* __pInstance;$/;"	m	class:RepositoryEngine
__pInstance	src/sync-service/SyncManager_Singleton.h	/^	static TYPE* __pInstance;$/;"	m	class:Singleton
__pInstance	src/sync-service/SyncManager_Singleton.h	/^TYPE* Singleton<TYPE>::__pInstance = NULL;$/;"	m	class:Singleton
__pLoop	src/sync-service/SyncManager_SyncWorker.h	/^	GMainLoop* __pLoop;$/;"	m	class:SyncWorker
__pNetworkChangeListener	src/sync-service/SyncManager_SyncManager.h	/^	NetworkChangeListener* __pNetworkChangeListener;$/;"	m	class:SyncManager
__pPkgmgrClient	src/sync-service/SyncManager_SyncManager.h	/^	pkgmgr_client* __pPkgmgrClient;$/;"	m	class:SyncManager
__pSource	src/sync-service/SyncManager_SyncWorker.h	/^	GSource* __pSource;$/;"	m	class:SyncWorker
__pStorageListener	src/sync-service/SyncManager_SyncManager.h	/^	StorageChangeListener* __pStorageListener;$/;"	m	class:SyncManager
__pSyncAdapterAggregator	src/sync-service/SyncManager_SyncManager.h	/^	SyncAdapterAggregator* __pSyncAdapterAggregator;$/;"	m	class:SyncManager
__pSyncJobDispatcher	src/sync-service/SyncManager_SyncManager.h	/^	SyncJobDispatcher* __pSyncJobDispatcher;$/;"	m	class:SyncManager
__pSyncJobQueue	src/sync-service/SyncManager_SyncManager.h	/^	SyncJobQueue* __pSyncJobQueue;$/;"	m	class:SyncManager
__pSyncRepositoryEngine	src/sync-service/SyncManager_SyncJobQueue.h	/^	RepositoryEngine* __pSyncRepositoryEngine;$/;"	m	class:SyncJobQueue
__pSyncRepositoryEngine	src/sync-service/SyncManager_SyncManager.h	/^	RepositoryEngine* __pSyncRepositoryEngine;$/;"	m	class:SyncManager
__pThread	src/sync-service/SyncManager_SyncWorker.h	/^	GThread* __pThread;$/;"	m	class:SyncWorker
__pendingRequests	src/sync-service/SyncManager_SyncWorker.h	/^	std::list<RequestData*> __pendingRequests;$/;"	m	class:SyncWorker
__pendingRequestsMutex	src/sync-service/SyncManager_SyncWorker.h	/^	pthread_mutex_t __pendingRequestsMutex;$/;"	m	class:SyncWorker
__periodicSyncTimes	src/sync-service/SyncManager_SyncStatusInfo.h	/^	vector<long long> __periodicSyncTimes;$/;"	m	class:SyncStatusInfo
__randomOffsetInMillis	src/sync-service/SyncManager_SyncManager.h	/^	long __randomOffsetInMillis;$/;"	m	class:SyncManager
__randomOffsetInSec	src/sync-service/SyncManager_RepositoryEngine.h	/^	long __randomOffsetInSec;$/;"	m	class:RepositoryEngine
__read_proc	src/sync-service/SyncManager_SyncService.cpp	/^static inline int __read_proc(const char *path, char *buf, int size)$/;"	f	file:
__reason	src/sync-service/SyncManager_HistoryItem.h	/^	int __reason;$/;"	m	class:HistoryItem
__runningAccounts	src/sync-service/SyncManager_SyncManager.h	/^	map<int, int> __runningAccounts;$/;"	m	class:SyncManager
__source	src/sync-service/SyncManager_HistoryItem.h	/^	int __source;$/;"	m	class:HistoryItem
__startTime	src/sync-service/SyncManager_CurrentSyncContext.h	/^	long __startTime;$/;"	m	class:CurrentSyncContext
__successCount	src/sync-service/SyncManager_DayStats.h	/^	int __successCount;$/;"	m	class:DayStats
__successTime	src/sync-service/SyncManager_DayStats.h	/^	long __successTime;$/;"	m	class:DayStats
__syncAdapterList	src/sync-service/SyncManager_SyncAdapterAggregator.h	/^	multimap<string, SyncAdapter*> __syncAdapterList;$/;"	m	class:SyncAdapterAggregator
__syncJobQueueMutex	src/sync-service/SyncManager_SyncManager.h	/^	pthread_mutex_t __syncJobQueueMutex;$/;"	m	class:SyncManager
__syncJobsList	src/sync-service/SyncManager_SyncJobQueue.h	/^	map<const string, SyncJob*> __syncJobsList;$/;"	m	class:SyncJobQueue
__syncRunning	src/sync-client/sync_adapter.c	/^	bool __syncRunning;$/;"	m	struct:sync_adapter_s	file:
__syncStatus	src/sync-service/SyncManager_RepositoryEngine.h	/^	map<int, SyncStatusInfo*> __syncStatus;$/;"	m	class:RepositoryEngine
__timerId	src/sync-service/SyncManager_CurrentSyncContext.h	/^	long __timerId;$/;"	m	class:CurrentSyncContext
__upstreamActivity	src/sync-service/SyncManager_HistoryItem.h	/^	long __upstreamActivity;$/;"	m	class:HistoryItem
_sync_manager_disable_sync	src/sync-client/sync_manager.c	/^int _sync_manager_disable_sync()$/;"	f
_sync_manager_enable_sync	src/sync-client/sync_manager.c	/^int _sync_manager_enable_sync()$/;"	f
acc	src/sync-service/SyncManager_SyncDefines.h	/^	account_h acc;$/;"	m	struct:Message
account	TC/utc-sync-manager.c	/^static account_h account = NULL;$/;"	v	file:
account	src/sync-service/SyncManager_PendingJob.h	/^	account_h account;$/;"	m	class:PendingJob
account	src/sync-service/SyncManager_RepositoryEngine.h	/^		account_h account;$/;"	m	class:RepositoryEngine::AccountInfo
account	src/sync-service/SyncManager_SyncJob.h	/^	account_h account;$/;"	m	class:SyncJob
accountCb	src/sync-service/SyncManager_SyncManager.cpp	/^bool accountCb(account_h account, void* pUserData)$/;"	f
accountHandle	src/sync-service/SyncManager_CapabilityInfo.h	/^	account_h accountHandle;$/;"	m	class:CapabilityInfo
accountHandle	src/sync-service/SyncManager_PeriodicSyncJob.h	/^	account_h accountHandle;$/;"	m	class:PeriodicSyncJob
accountId	src/sync-client/sync_adapter.c	/^	int accountId;$/;"	m	struct:sync_thread_params_s	file:
account_id	TC/utc-sync-manager.c	/^static int account_id = -1;$/;"	v	file:
adapter	src/sync-service/SyncManager_SyncService.cpp	/^TizenSyncAdapter* adapter;$/;"	v
alarm_id	src/sync-service/SyncManager_SyncJobDispatcher.cpp	/^alarm_id_t alarm_id = 0;$/;"	v
appId	src/sync-service/SyncManager_CapabilityInfo.h	/^	string appId;$/;"	m	class:CapabilityInfo
appId	src/sync-service/SyncManager_PendingJob.h	/^	string appId;$/;"	m	class:PendingJob
appId	src/sync-service/SyncManager_RepositoryEngine.h	/^		string appId;$/;"	m	class:RepositoryEngine::AccountInfo
appId	src/sync-service/SyncManager_SyncJob.h	/^	string appId;$/;"	m	class:SyncJob
app_control_reply	src/sync-service/SyncManager_SyncService.cpp	/^app_control_reply(app_control_h request, app_control_h reply, app_control_result_e result, void *user_data)$/;"	f
app_id	TC/utc-sync-manager.c	/^const char *app_id = "core.sync-manager-tests";$/;"	v
appid	src/sync-client/sync_manager.c	/^	char *appid;$/;"	m	struct:sync_manager_s	file:
backOff	src/sync-service/SyncManager_RepositoryEngine.h	/^typedef struct backOff$/;"	s
backOff	src/sync-service/SyncManager_RepositoryEngine.h	/^}backOff;$/;"	t	typeref:struct:backOff
backOffDelay	src/sync-service/SyncManager_CapabilityInfo.h	/^	long backOffDelay;$/;"	m	class:CapabilityInfo
backOffTime	src/sync-service/SyncManager_CapabilityInfo.h	/^	long backOffTime;$/;"	m	class:CapabilityInfo
backoff	src/sync-service/SyncManager_SyncJob.h	/^	long backoff; \/\/\/Set by the SyncManager in order to delay retries.$/;"	m	class:SyncJob
bndl_iterator	src/sync-service/SyncManager_RepositoryEngine.cpp	/^bndl_iterator(const char* pKey, const char* pVal, void* pData)$/;"	f	file:
bndl_iterator	src/sync-service/SyncManager_SyncJob.cpp	/^bndl_iterator(const char* pKey, const char* pVal, void* pData)$/;"	f	file:
bundle_iterate_cb	common/sync-ipc-marshal.c	/^bundle_iterate_cb(const char *key, const char *val, void *data)$/;"	f
calendar_subscription_started	src/sync-service/SyncManager_DataChangeListener.h	/^        bool calendar_subscription_started;$/;"	m	class:DataChangeListener
cancel_sync_cb	src/sync-client/sync_adapter.c	/^	sync_adapter_cancel_sync_cb cancel_sync_cb;$/;"	m	struct:sync_adapter_s	file:
capabilities	src/sync-service/SyncManager_RepositoryEngine.h	/^		map<string, CapabilityInfo*> capabilities;$/;"	m	class:RepositoryEngine::AccountInfo
capability	src/sync-client/sync_adapter.c	/^	char *capability;$/;"	m	struct:sync_thread_params_s	file:
capability	src/sync-service/SyncManager_CapabilityInfo.h	/^	string capability;$/;"	m	class:CapabilityInfo
capability	src/sync-service/SyncManager_PendingJob.h	/^	string capability;$/;"	m	class:PendingJob
capability	src/sync-service/SyncManager_PeriodicSyncJob.h	/^	string capability;$/;"	m	class:PeriodicSyncJob
capability	src/sync-service/SyncManager_SyncDefines.h	/^	std::string capability;$/;"	m	struct:Message
capability	src/sync-service/SyncManager_SyncJob.h	/^	string capability;$/;"	m	class:SyncJob
capabilityId	src/sync-service/SyncManager_PendingJob.h	/^	int capabilityId;$/;"	m	class:PendingJob
capabilityId	src/sync-service/SyncManager_SyncStatusInfo.h	/^	int capabilityId;$/;"	m	class:SyncStatusInfo
capability_cal	TC/utc-sync-manager.c	/^const char *capability_cal = "http:\/\/tizen.org\/account\/capability\/calendar";$/;"	v
capability_invalid	TC/utc-sync-manager.c	/^const char *capability_invalid = "http:\/\/tizen.org\/account\/capability_invalid";$/;"	v
connected_sync	TC/utc-sync-manager.c	/^static bool connected_sync = false;$/;"	v	file:
connection	src/sync-service/SyncManager_NetworkChangeListener.h	/^	connection_h connection;$/;"	m	class:NetworkChangeListener
contacts_subscription_started	src/sync-service/SyncManager_DataChangeListener.h	/^        bool contacts_subscription_started;$/;"	m	class:DataChangeListener
convert_to_path	src/sync-service/SyncManager_SyncService.cpp	/^void convert_to_path(char app_id[])$/;"	f
created_acc	TC/utc-sync-manager.c	/^static bool created_acc = false;$/;"	v	file:
cur_thread	src/sync-client/sync_adapter.c	/^	pthread_t cur_thread;$/;"	m	struct:sync_adapter_s	file:
delay	src/sync-service/SyncManager_RepositoryEngine.h	/^	long delay;$/;"	m	struct:backOff
delayUntil	src/sync-service/SyncManager_CapabilityInfo.h	/^	long delayUntil;$/;"	m	class:CapabilityInfo
delayUntil	src/sync-service/SyncManager_SyncJob.h	/^	long delayUntil; \/\/Specified by the adapter to delay subsequent sync operations.$/;"	m	class:SyncJob
dumpAccountData	src/sync-service/SyncManager_JsonParser.cpp	/^JsonParser::dumpAccountData()$/;"	f	class:JsonParser
dumpSyncAdapters	src/sync-service/SyncManager_SyncAdapterAggregator.cpp	/^SyncAdapterAggregator::dumpSyncAdapters()$/;"	f	class:SyncAdapterAggregator
effectiveRunTime	src/sync-service/SyncManager_SyncJob.h	/^	long effectiveRunTime; \/\/Elapsed real time in millis when this sync will be run.Depends on max(backoff, latestRunTime, and delayUntil).$/;"	m	class:SyncJob
email_address	TC/utc-sync-manager.c	/^const char *email_address = "test_email@samsung.com";$/;"	v
existed_acc	TC/utc-sync-manager.c	/^static bool existed_acc = false;$/;"	v	file:
extra	TC/utc-sync-manager.c	/^bundle *extra = NULL;$/;"	v
extra	src/sync-client/sync_adapter.c	/^	bundle *extra;$/;"	m	struct:sync_thread_params_s	file:
flexTime	src/sync-service/SyncManager_PeriodicSyncJob.h	/^	long flexTime;$/;"	m	class:PeriodicSyncJob
flexTime	src/sync-service/SyncManager_SyncJob.h	/^	long flexTime; \/\/Amount of time before effectiveRunTime from which this sync can run$/;"	m	class:SyncJob
g_hash_table	src/sync-service/SyncManager_SyncService.cpp	/^GHashTable* g_hash_table = NULL;$/;"	v
g_sync_adapter	src/sync-client/sync_adapter.c	/^static sync_adapter_s *g_sync_adapter = NULL;$/;"	v	file:
g_sync_manager	src/sync-client/sync_manager.c	/^static sync_manager_s *g_sync_manager;$/;"	v	file:
gdbusConnection	src/sync-service/SyncManager_SyncService.cpp	/^static GDBusConnection* gdbusConnection = NULL;$/;"	v	file:
get_caller_pid	src/sync-service/SyncManager_SyncService.cpp	/^get_caller_pid(GDBusMethodInvocation* pMethodInvocation)$/;"	f	file:
get_capability_all_cb	src/sync-service/SyncManager_SyncManager.cpp	/^bool get_capability_all_cb(const char* capability_type, account_capability_state_e capability_state, void *user_data)$/;"	f
get_interval	src/sync-client/sync_manager.c	/^int get_interval(sync_period_e period)$/;"	f
id	src/sync-service/SyncManager_CapabilityInfo.h	/^	int id;$/;"	m	class:CapabilityInfo
ipcObj	src/sync-client/sync_manager.c	/^	TizenSyncManager *ipcObj;$/;"	m	struct:sync_manager_s	file:
isAccountData	src/sync-service/SyncManager_JsonParser.h	/^	bool isAccountData;$/;"	m	class:JsonParser
isEnabled	src/sync-service/SyncManager_CapabilityInfo.h	/^	bool isEnabled;$/;"	m	class:CapabilityInfo
isExpedited	src/sync-service/SyncManager_PendingJob.h	/^	bool isExpedited;$/;"	m	class:PendingJob
isExpedited	src/sync-service/SyncManager_SyncJob.h	/^	bool isExpedited;$/;"	m	class:SyncJob
isParallelSyncAllowed	src/sync-service/SyncManager_SyncJob.h	/^	bool isParallelSyncAllowed;$/;"	m	class:SyncJob
key	src/sync-service/SyncManager_JsonParser.h	/^	std::string key;$/;"	m	class:JsonParser
key	src/sync-service/SyncManager_SyncJob.h	/^	string key;$/;"	m	class:SyncJob
latestRunTime	src/sync-service/SyncManager_SyncJob.h	/^	long latestRunTime; \/\/Elapsed real time in millis at which to run this sync.$/;"	m	class:SyncJob
mAccountTypeId	src/sync-service/SyncManager_JsonParser.h	/^	int mAccountTypeId;$/;"	m	class:JsonParser
mIsCapabilityInfo	src/sync-service/SyncManager_JsonParser.h	/^	bool mIsCapabilityInfo;$/;"	m	class:JsonParser
mIsPeriodicObject	src/sync-service/SyncManager_JsonParser.h	/^	bool mIsPeriodicObject;$/;"	m	class:JsonParser
mIsPeriodicSyncInfo	src/sync-service/SyncManager_JsonParser.h	/^	bool mIsPeriodicSyncInfo;$/;"	m	class:JsonParser
mUserId	src/sync-service/SyncManager_JsonParser.h	/^	int mUserId;$/;"	m	class:JsonParser
main	src/sync-service/main.cpp	/^main(int argc, char **argv)$/;"	f
marshal_bundle	common/sync-ipc-marshal.c	/^marshal_bundle(bundle *extras)$/;"	f
message	src/sync-service/SyncManager_SyncWorker.h	/^		Message message;$/;"	m	struct:SyncWorker::RequestData
mpCapabilityInfo	src/sync-service/SyncManager_JsonParser.h	/^	CapabilityInfo* mpCapabilityInfo;$/;"	m	class:JsonParser
mpList	src/sync-service/SyncManager_JsonParser.h	/^	std::vector<CapabilityInfo> mpList;$/;"	m	class:JsonParser
mpParser	src/sync-service/SyncManager_JsonParser.h	/^	JsonParser *mpParser;$/;"	m	class:JsonParser
mpPeriodicSync	src/sync-service/SyncManager_JsonParser.h	/^	PeriodicSync* mpPeriodicSync;$/;"	m	class:JsonParser
mpPeriodicSyncList	src/sync-service/SyncManager_JsonParser.h	/^	std::vector<PeriodicSync> mpPeriodicSyncList;$/;"	m	class:JsonParser
name	TC/utc-sync-manager.c	/^const char *name = "test_name";$/;"	v
onJsonArrayParsed	src/sync-service/SyncManager_JsonParser.cpp	/^JsonParser::onJsonArrayParsed(JsonArray* pArray, guint index, JsonNode* element_node, gpointer user_data)$/;"	f	class:JsonParser
onJsonPeriodicSyncArrayParsed	src/sync-service/SyncManager_JsonParser.cpp	/^JsonParser::onJsonPeriodicSyncArrayParsed(JsonArray* pArray, guint index, JsonNode* element_node, gpointer user_data)$/;"	f	class:JsonParser
on_cancel_cb	TC/utc-sync-manager.c	/^static void on_cancel_cb(account_h account, const char *capability)$/;"	f	file:
on_start_cb	TC/utc-sync-manager.c	/^static bool on_start_cb(account_h account, bundle *extras, const char *capability)$/;"	f	file:
operator =	src/sync-service/SyncManager_CapabilityInfo.cpp	/^CapabilityInfo& CapabilityInfo::operator =(const CapabilityInfo& capabilityInfo)$/;"	f	class:CapabilityInfo
operator =	src/sync-service/SyncManager_PeriodicSyncJob.cpp	/^PeriodicSyncJob::operator = (const PeriodicSyncJob& other)$/;"	f	class:PeriodicSyncJob
operator =	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::operator = (const SyncJob& job)$/;"	f	class:SyncJob
operator =	src/sync-service/SyncManager_SyncStatusInfo.cpp	/^SyncStatusInfo::operator =(SyncStatusInfo& other)$/;"	f	class:SyncStatusInfo
operator ==	src/sync-service/SyncManager_PeriodicSyncJob.cpp	/^PeriodicSyncJob::operator==(const PeriodicSyncJob& other)$/;"	f	class:PeriodicSyncJob
pExtras	src/sync-service/SyncManager_PendingJob.h	/^	bundle* pExtras;$/;"	m	class:PendingJob
pExtras	src/sync-service/SyncManager_PeriodicSyncJob.h	/^	bundle* pExtras;$/;"	m	class:PeriodicSyncJob
pExtras	src/sync-service/SyncManager_SyncJob.h	/^	bundle* pExtras;$/;"	m	class:SyncJob
pResultListener	src/sync-service/SyncManager_SyncWorker.h	/^		ISyncWorkerResultListener* pResultListener;$/;"	m	struct:SyncWorker::RequestData
pServerManager	src/sync-service/SyncManager_SyncService.cpp	/^GDBusObjectManagerServer* pServerManager = NULL;$/;"	v
pSyncJob	src/sync-service/SyncManager_SyncDefines.h	/^	SyncJob* pSyncJob;$/;"	m	struct:Message
parseAccountData	src/sync-service/SyncManager_JsonParser.cpp	/^JsonParser::parseAccountData()$/;"	f	class:JsonParser
parseJsonArray	src/sync-service/SyncManager_JsonParser.cpp	/^JsonParser::parseJsonArray(JsonArray* pArray)$/;"	f	class:JsonParser
parseJsonNode	src/sync-service/SyncManager_JsonParser.cpp	/^JsonParser::parseJsonNode(JsonNode* pNode)$/;"	f	class:JsonParser
parseJsonObject	src/sync-service/SyncManager_JsonParser.cpp	/^JsonParser::parseJsonObject(JsonObject* pObject)$/;"	f	class:JsonParser
parsePendingJobData	src/sync-service/SyncManager_JsonParser.cpp	/^JsonParser::parsePendingJobData()$/;"	f	class:JsonParser
period	src/sync-service/SyncManager_PeriodicSyncJob.h	/^	long period;$/;"	m	class:PeriodicSyncJob
periodicSyncList	src/sync-service/SyncManager_CapabilityInfo.h	/^	vector<PeriodicSyncJob*> periodicSyncList;$/;"	m	class:CapabilityInfo
proc_get_cmdline_self	src/sync-client/sync_manager.c	/^char *proc_get_cmdline_self()$/;"	f
read_proc	src/sync-client/sync_manager.c	/^int read_proc(const char *path, char *buf, int size)$/;"	f
reason	src/sync-service/SyncManager_PendingJob.h	/^	int reason;$/;"	m	class:PendingJob
reason	src/sync-service/SyncManager_SyncJob.h	/^	SyncReason reason;$/;"	m	class:SyncJob
res	src/sync-service/SyncManager_SyncDefines.h	/^	SyncStatus res;$/;"	m	struct:Message
result	common/sync-log.h	/^typedef bool  result;$/;"	t
run_sync	src/sync-client/sync_adapter.c	/^void *run_sync(void *params)$/;"	f
sa_app_id	src/sync-service/SyncManager_SyncService.cpp	/^string sa_app_id;$/;"	v
scheduledTimeoutTime	src/sync-service/SyncManager_SyncJobDispatcher.cpp	/^long long scheduledTimeoutTime = -1;$/;"	v
setParsedData	src/sync-service/SyncManager_JsonParser.cpp	/^JsonParser::setParsedData(int value)$/;"	f	class:JsonParser
setParsedData	src/sync-service/SyncManager_JsonParser.cpp	/^JsonParser::setParsedData(std::string keyValue)$/;"	f	class:JsonParser
set_cb	TC/utc-sync-manager.c	/^static bool set_cb = false;$/;"	v	file:
sortFunc	src/sync-service/SyncManager_SyncJobDispatcher.cpp	/^sortFunc(const SyncJob* pJob1, const SyncJob* pJob2)$/;"	f
start_sync_cb	src/sync-client/sync_adapter.c	/^	sync_adapter_start_sync_cb start_sync_cb;$/;"	m	struct:sync_adapter_s	file:
syncSource	src/sync-service/SyncManager_PendingJob.h	/^	int syncSource;$/;"	m	class:PendingJob
syncSource	src/sync-service/SyncManager_SyncJob.h	/^	SyncSource syncSource;$/;"	m	class:SyncJob
sync_adapter_cancel_sync_cb	include/sync_adapter.h	/^typedef void (*sync_adapter_cancel_sync_cb)(account_h account, const char* capability);$/;"	t
sync_adapter_destroy	src/sync-client/sync_adapter.c	/^void sync_adapter_destroy(void)$/;"	f
sync_adapter_handle_init_complete	src/sync-service/SyncManager_SyncService.cpp	/^sync_adapter_handle_init_complete($/;"	f
sync_adapter_handle_send_result	src/sync-service/SyncManager_SyncService.cpp	/^sync_adapter_handle_send_result($/;"	f
sync_adapter_init	src/sync-client/sync_adapter.c	/^int sync_adapter_init(const char *capability)$/;"	f
sync_adapter_obj	src/sync-client/sync_adapter.c	/^	TizenSyncAdapter *sync_adapter_obj;$/;"	m	struct:sync_adapter_s	file:
sync_adapter_obj	src/sync-client/sync_adapter.c	/^	TizenSyncAdapter *sync_adapter_obj;$/;"	m	struct:sync_thread_params_s	file:
sync_adapter_on_start_sync	src/sync-client/sync_adapter.c	/^sync_adapter_on_start_sync($/;"	f
sync_adapter_on_stop_sync	src/sync-client/sync_adapter.c	/^sync_adapter_on_stop_sync($/;"	f
sync_adapter_s	src/sync-client/sync_adapter.c	/^typedef struct sync_adapter_s {$/;"	s	file:
sync_adapter_s	src/sync-client/sync_adapter.c	/^} sync_adapter_s;$/;"	t	typeref:struct:sync_adapter_s	file:
sync_adapter_set_callbacks	src/sync-client/sync_adapter.c	/^int sync_adapter_set_callbacks(sync_adapter_start_sync_cb on_start_cb, sync_adapter_cancel_sync_cb on_cancel_cb)$/;"	f
sync_adapter_start_sync_cb	include/sync_adapter.h	/^typedef bool (*sync_adapter_start_sync_cb)(account_h account, bundle* extras, const char* capability);$/;"	t
sync_adapter_unset_callbacks	src/sync-client/sync_adapter.c	/^int sync_adapter_unset_callbacks()$/;"	f
sync_error_e	include/sync-error.h	/^} sync_error_e;$/;"	t	typeref:enum:__anon2
sync_ipc_obj	src/sync-service/SyncManager_SyncService.cpp	/^static TizenSyncManager* sync_ipc_obj = NULL;$/;"	v	file:
sync_manager_add_periodic_sync_job	src/sync-client/sync_manager.c	/^int sync_manager_add_periodic_sync_job(account_h account, const char *capability, bundle *extra, sync_period_e sync_period)$/;"	f
sync_manager_add_periodic_sync_job	src/sync-service/SyncManager_SyncService.cpp	/^sync_manager_add_periodic_sync_job($/;"	f
sync_manager_add_sync_adapter	src/sync-service/SyncManager_SyncService.cpp	/^sync_manager_add_sync_adapter($/;"	f
sync_manager_add_sync_job	src/sync-client/sync_manager.c	/^int sync_manager_add_sync_job(account_h account, const char *capability, bundle *extra)$/;"	f
sync_manager_add_sync_job	src/sync-service/SyncManager_SyncService.cpp	/^sync_manager_add_sync_job($/;"	f
sync_manager_cleanup_account	TC/utc-sync-manager.c	/^void sync_manager_cleanup_account(void)$/;"	f
sync_manager_connect	src/sync-client/sync_manager.c	/^int sync_manager_connect(void)$/;"	f
sync_manager_disconnect	src/sync-client/sync_manager.c	/^void sync_manager_disconnect(void)$/;"	f
sync_manager_remove_periodic_sync_job	src/sync-client/sync_manager.c	/^int sync_manager_remove_periodic_sync_job(account_h account, const char *capability)$/;"	f
sync_manager_remove_periodic_sync_job	src/sync-service/SyncManager_SyncService.cpp	/^sync_manager_remove_periodic_sync_job($/;"	f
sync_manager_remove_sync_job	src/sync-client/sync_manager.c	/^int sync_manager_remove_sync_job(account_h account, const char *capability)$/;"	f
sync_manager_remove_sync_job	src/sync-service/SyncManager_SyncService.cpp	/^sync_manager_remove_sync_job($/;"	f
sync_manager_s	src/sync-client/sync_manager.c	/^typedef struct sync_manager_s {$/;"	s	file:
sync_manager_s	src/sync-client/sync_manager.c	/^} sync_manager_s;$/;"	t	typeref:struct:sync_manager_s	file:
sync_manager_set_sync_status	src/sync-service/SyncManager_SyncService.cpp	/^sync_manager_set_sync_status($/;"	f
sync_manager_setup_account	TC/utc-sync-manager.c	/^void sync_manager_setup_account(void)$/;"	f
sync_manager_setup_adapter	TC/utc-sync-manager.c	/^void sync_manager_setup_adapter(void)$/;"	f
sync_manager_setup_interval	TC/utc-sync-manager.c	/^void sync_manager_setup_interval(void)$/;"	f
sync_period_e	include/sync_manager.h	/^} sync_period_e;$/;"	t	typeref:enum:__anon1
sync_service_finalise	src/sync-service/SyncManager_ServiceInterface.cpp	/^API int sync_service_finalise(void)$/;"	f
sync_service_initialise	src/sync-service/SyncManager_ServiceInterface.cpp	/^API int sync_service_initialise(void)$/;"	f
sync_thread_params_s	src/sync-client/sync_adapter.c	/^typedef struct sync_thread_params_s {$/;"	s	file:
sync_thread_params_s	src/sync-client/sync_adapter.c	/^} sync_thread_params_s;$/;"	t	typeref:struct:sync_thread_params_s	file:
syncable	src/sync-service/SyncManager_CapabilityInfo.h	/^	int syncable;$/;"	m	class:CapabilityInfo
time	src/sync-service/SyncManager_RepositoryEngine.h	/^	long time;$/;"	m	struct:backOff
type	src/sync-service/SyncManager_SyncDefines.h	/^	SyncDispatchMessage type;$/;"	m	struct:Message
umarshal_bundle	common/sync-ipc-marshal.c	/^umarshal_bundle(GVariant *in_data)$/;"	f
using_acc	TC/utc-sync-manager.c	/^static bool using_acc = false;$/;"	v	file:
utc_sync_adapter_destroy_p	TC/utc-sync-manager.c	/^int utc_sync_adapter_destroy_p(void)$/;"	f
utc_sync_adapter_destroy_p2	TC/utc-sync-manager.c	/^int utc_sync_adapter_destroy_p2(void)$/;"	f
utc_sync_adapter_init_n	TC/utc-sync-manager.c	/^int utc_sync_adapter_init_n(void)$/;"	f
utc_sync_adapter_init_p	TC/utc-sync-manager.c	/^int utc_sync_adapter_init_p(void)$/;"	f
utc_sync_adapter_init_p2	TC/utc-sync-manager.c	/^int utc_sync_adapter_init_p2(void)$/;"	f
utc_sync_adapter_set_callbacks_n	TC/utc-sync-manager.c	/^int utc_sync_adapter_set_callbacks_n(void)$/;"	f
utc_sync_adapter_set_callbacks_p	TC/utc-sync-manager.c	/^int utc_sync_adapter_set_callbacks_p(void)$/;"	f
utc_sync_adapter_set_callbacks_p2	TC/utc-sync-manager.c	/^int utc_sync_adapter_set_callbacks_p2(void)$/;"	f
utc_sync_manager_add_periodic_sync_job_n	TC/utc-sync-manager.c	/^int utc_sync_manager_add_periodic_sync_job_n(void)$/;"	f
utc_sync_manager_add_periodic_sync_job_n2	TC/utc-sync-manager.c	/^int utc_sync_manager_add_periodic_sync_job_n2(void)$/;"	f
utc_sync_manager_add_periodic_sync_job_p	TC/utc-sync-manager.c	/^int utc_sync_manager_add_periodic_sync_job_p(void)$/;"	f
utc_sync_manager_add_periodic_sync_job_p2	TC/utc-sync-manager.c	/^int utc_sync_manager_add_periodic_sync_job_p2(void)$/;"	f
utc_sync_manager_add_sync_job_n	TC/utc-sync-manager.c	/^int utc_sync_manager_add_sync_job_n(void)$/;"	f
utc_sync_manager_add_sync_job_p	TC/utc-sync-manager.c	/^int utc_sync_manager_add_sync_job_p(void)$/;"	f
utc_sync_manager_add_sync_job_p2	TC/utc-sync-manager.c	/^int utc_sync_manager_add_sync_job_p2(void)$/;"	f
utc_sync_manager_cleanup	TC/utc-sync-manager.c	/^void utc_sync_manager_cleanup(void)$/;"	f
utc_sync_manager_connect_p	TC/utc-sync-manager.c	/^int utc_sync_manager_connect_p(void)$/;"	f
utc_sync_manager_disconnect_p	TC/utc-sync-manager.c	/^int utc_sync_manager_disconnect_p(void)$/;"	f
utc_sync_manager_remove_periodic_sync_job_n	TC/utc-sync-manager.c	/^int utc_sync_manager_remove_periodic_sync_job_n(void)$/;"	f
utc_sync_manager_remove_periodic_sync_job_p	TC/utc-sync-manager.c	/^int utc_sync_manager_remove_periodic_sync_job_p(void)$/;"	f
utc_sync_manager_remove_periodic_sync_job_p2	TC/utc-sync-manager.c	/^int utc_sync_manager_remove_periodic_sync_job_p2(void)$/;"	f
utc_sync_manager_remove_sync_job_n	TC/utc-sync-manager.c	/^int utc_sync_manager_remove_sync_job_n(void)$/;"	f
utc_sync_manager_remove_sync_job_p	TC/utc-sync-manager.c	/^int utc_sync_manager_remove_sync_job_p(void)$/;"	f
utc_sync_manager_remove_sync_job_p2	TC/utc-sync-manager.c	/^int utc_sync_manager_remove_sync_job_p2(void)$/;"	f
utc_sync_manager_startup	TC/utc-sync-manager.c	/^void utc_sync_manager_startup(void)$/;"	f
~BatteryStatusListener	src/sync-service/SyncManager_BatteryStatusListener.cpp	/^BatteryStatusListener::~BatteryStatusListener(void)$/;"	f	class:BatteryStatusListener
~CapabilityInfo	src/sync-service/SyncManager_CapabilityInfo.cpp	/^CapabilityInfo::~CapabilityInfo(void)$/;"	f	class:CapabilityInfo
~CurrentSyncContext	src/sync-service/SyncManager_CurrentSyncContext.cpp	/^CurrentSyncContext::~CurrentSyncContext(void)$/;"	f	class:CurrentSyncContext
~CurrentSyncJobQueue	src/sync-service/SyncManager_CurrentSyncJobQueue.cpp	/^CurrentSyncJobQueue::~CurrentSyncJobQueue(void)$/;"	f	class:CurrentSyncJobQueue
~DataChangeListener	src/sync-service/SyncManager_DataChangeListener.cpp	/^DataChangeListener::~DataChangeListener(void)$/;"	f	class:DataChangeListener
~DayStats	src/sync-service/SyncManager_DayStats.cpp	/^DayStats::~DayStats(void)$/;"	f	class:DayStats
~HistoryItem	src/sync-service/SyncManager_HistoryItem.cpp	/^HistoryItem::~HistoryItem(void)$/;"	f	class:HistoryItem
~ISyncWorkerResultListener	src/sync-service/SyncManager_SyncWorkerResultListener.h	/^	virtual ~ISyncWorkerResultListener() {};$/;"	f	class:ISyncWorkerResultListener
~JsonParser	src/sync-service/SyncManager_JsonParser.cpp	/^JsonParser::~JsonParser()$/;"	f	class:JsonParser
~NetworkChangeListener	src/sync-service/SyncManager_NetworkChangeListener.cpp	/^NetworkChangeListener::~NetworkChangeListener(void)$/;"	f	class:NetworkChangeListener
~PendingJob	src/sync-service/SyncManager_PendingJob.cpp	/^PendingJob::~PendingJob(void)$/;"	f	class:PendingJob
~PeriodicSyncJob	src/sync-service/SyncManager_PeriodicSyncJob.cpp	/^PeriodicSyncJob::~PeriodicSyncJob(void)$/;"	f	class:PeriodicSyncJob
~ProviderSetting	src/sync-service/SyncManager_ProviderSettings.cpp	/^ProviderSetting::~ProviderSetting(void)$/;"	f	class:ProviderSetting
~RepositoryEngine	src/sync-service/SyncManager_RepositoryEngine.cpp	/^RepositoryEngine::~RepositoryEngine(void)$/;"	f	class:RepositoryEngine
~SettingDBHelper	src/sync-service/SyncManager_SettingsDbHelper.cpp	/^SettingDBHelper::~SettingDBHelper(void)$/;"	f	class:SettingDBHelper
~Singleton	src/sync-service/SyncManager_Singleton.h	/^	virtual ~Singleton(void){}$/;"	f	class:Singleton
~StorageChangeListener	src/sync-service/SyncManager_StorageChangeListener.cpp	/^StorageChangeListener::~StorageChangeListener(void)$/;"	f	class:StorageChangeListener
~SyncAdapter	src/sync-service/SyncManager_SyncAdapterAggregator.h	/^	~SyncAdapter(void)$/;"	f	class:SyncAdapterAggregator::SyncAdapter
~SyncAdapterAggregator	src/sync-service/SyncManager_SyncAdapterAggregator.cpp	/^SyncAdapterAggregator::~SyncAdapterAggregator(void)$/;"	f	class:SyncAdapterAggregator
~SyncJob	src/sync-service/SyncManager_SyncJob.cpp	/^SyncJob::~SyncJob(void)$/;"	f	class:SyncJob
~SyncJobDispatcher	src/sync-service/SyncManager_SyncJobDispatcher.cpp	/^SyncJobDispatcher::~SyncJobDispatcher(void)$/;"	f	class:SyncJobDispatcher
~SyncJobQueue	src/sync-service/SyncManager_SyncJobQueue.cpp	/^SyncJobQueue::~SyncJobQueue(void)$/;"	f	class:SyncJobQueue
~SyncManager	src/sync-service/SyncManager_SyncManager.cpp	/^SyncManager::~SyncManager(void)$/;"	f	class:SyncManager
~SyncService	src/sync-service/SyncManager_SyncService.cpp	/^SyncService::~SyncService(void)$/;"	f	class:SyncService
~SyncWorker	src/sync-service/SyncManager_SyncWorker.cpp	/^SyncWorker::~SyncWorker(void)$/;"	f	class:SyncWorker
